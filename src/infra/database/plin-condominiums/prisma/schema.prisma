// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../../../../../node_modules/@plin_condominiums/prisma/client"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PLIN_CONDOMINIUMS")
}

model accounts_payable {
  id                            Int                             @id @default(autoincrement())
  provider_id                   Int?
  description                   String?
  issue_date                    DateTime?                       @db.Timestamptz(6)
  value                         Decimal?                        @db.Decimal(10, 2)
  installments                  Int?
  created_by                    Int?
  created_at                    DateTime                        @db.Timestamptz(6)
  updated_at                    DateTime                        @db.Timestamptz(6)
  deleted_at                    DateTime?                       @db.Timestamptz(6)
  users                         users?                          @relation(fields: [created_by], references: [id], onDelete: Cascade)
  providers                     providers?                      @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  accounts_payable_installments accounts_payable_installments[]
}

model accounts_payable_installments {
  id                                 Int                                  @id @default(autoincrement())
  accounts_payable_id                Int
  due_date                           DateTime                             @db.Timestamptz(6)
  forecast_date                      DateTime?                            @db.Timestamptz(6)
  value                              Decimal?                             @db.Decimal(10, 2)
  isScheduled                        Boolean?                             @default(false)
  created_at                         DateTime                             @db.Timestamptz(6)
  updated_at                         DateTime                             @db.Timestamptz(6)
  deleted_at                         DateTime?                            @db.Timestamptz(6)
  accounts_payable                   accounts_payable                     @relation(fields: [accounts_payable_id], references: [id], onDelete: Cascade)
  accounts_payable_installments_paid accounts_payable_installments_paid[]
}

model accounts_payable_installments_paid {
  id                               Int                           @id @default(autoincrement())
  accounts_payable_installments_id Int
  date                             DateTime                      @db.Timestamptz(6)
  value                            Decimal?                      @db.Decimal(10, 2)
  created_at                       DateTime                      @db.Timestamptz(6)
  updated_at                       DateTime                      @db.Timestamptz(6)
  deleted_at                       DateTime?                     @db.Timestamptz(6)
  accounts_payable_installments    accounts_payable_installments @relation(fields: [accounts_payable_installments_id], references: [id], onDelete: Cascade, map: "accounts_payable_installments_accounts_payable_installment_fkey")
}

model addresses {
  id         Int         @id @default(autoincrement())
  address    String?     @db.VarChar(255)
  zipcode    String?     @db.VarChar(255)
  number     Int?
  complement String?     @db.VarChar(255)
  district   String?     @db.VarChar(255)
  isPrimary  Boolean?    @default(false)
  city_id    Int?
  contact_id Int?
  created_at DateTime    @db.Timestamptz(6)
  updated_at DateTime    @db.Timestamptz(6)
  deleted_at DateTime?   @db.Timestamptz(6)
  profile_id Int?
  cities     cities?     @relation(fields: [city_id], references: [id])
  contacts   contacts?   @relation(fields: [contact_id], references: [id], onDelete: Cascade)
  profiles   profiles?   @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employees  employees[]
}

model announcement_comments {
  id                          Int                     @id @default(autoincrement())
  description                 String?
  announcement_id             Int?
  announcement_comment_id     Int?
  user_id                     Int
  created_at                  DateTime                @default(dbgenerated("'2022-09-19 17:37:02.307+00'::timestamp with time zone")) @db.Timestamptz(6)
  updated_at                  DateTime                @default(dbgenerated("'2022-09-19 17:37:02.307+00'::timestamp with time zone")) @db.Timestamptz(6)
  deleted_at                  DateTime?               @db.Timestamptz(6)
  announcement_comments       announcement_comments?  @relation("announcement_commentsToannouncement_comments", fields: [announcement_comment_id], references: [id], onDelete: Cascade)
  announcements               announcements?          @relation(fields: [announcement_id], references: [id], onDelete: Cascade)
  users                       users                   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  other_announcement_comments announcement_comments[] @relation("announcement_commentsToannouncement_comments")
}

model announcement_documents {
  id              Int                              @id @default(autoincrement())
  type            enum_announcement_documents_type
  announcement_id Int?
  file_id         Int?
  created_at      DateTime                         @default(dbgenerated("'2022-09-19 17:37:02.395+00'::timestamp with time zone")) @db.Timestamptz(6)
  updated_at      DateTime                         @default(dbgenerated("'2022-09-19 17:37:02.395+00'::timestamp with time zone")) @db.Timestamptz(6)
  deleted_at      DateTime?                        @db.Timestamptz(6)
  announcements   announcements?                   @relation(fields: [announcement_id], references: [id], onDelete: Cascade)
  files           files?                           @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model announcement_interactions {
  id              Int                                 @id @default(autoincrement())
  type            enum_announcement_interactions_type
  announcement_id Int?
  user_id         Int
  created_at      DateTime                            @default(dbgenerated("'2022-09-19 17:37:02.272+00'::timestamp with time zone")) @db.Timestamptz(6)
  updated_at      DateTime                            @default(dbgenerated("'2022-09-19 17:37:02.272+00'::timestamp with time zone")) @db.Timestamptz(6)
  deleted_at      DateTime?                           @db.Timestamptz(6)
  announcements   announcements?                      @relation(fields: [announcement_id], references: [id], onDelete: Cascade)
  users           users                               @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model announcements {
  id                        Int                         @id @default(autoincrement())
  title                     String
  description               String?
  hashtags                  String[]                    @db.VarChar(255)
  pinned                    Boolean?                    @default(false)
  condominium_id            Int
  user_id                   Int
  created_at                DateTime                    @default(dbgenerated("'2022-09-19 17:37:02.236+00'::timestamp with time zone")) @db.Timestamptz(6)
  updated_at                DateTime                    @default(dbgenerated("'2022-09-19 17:37:02.236+00'::timestamp with time zone")) @db.Timestamptz(6)
  deleted_at                DateTime?                   @db.Timestamptz(6)
  condominiums              condominiums                @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  users                     users                       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  announcement_comments     announcement_comments[]
  announcement_documents    announcement_documents[]
  announcement_interactions announcement_interactions[]
}

model app_modules {
  id        Int     @id @default(autoincrement())
  module_id Int
  modules   modules @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model apportionment_fractions {
  id                               Int                           @id @default(autoincrement())
  fraction                         Float?
  unit_id                          Int
  apportionment_fractions_group_id Int
  created_at                       DateTime?                     @db.Timestamptz(6)
  updated_at                       DateTime?                     @db.Timestamptz(6)
  deleted_at                       DateTime?                     @db.Timestamptz(6)
  apportionment_fractions_group    apportionment_fractions_group @relation(fields: [apportionment_fractions_group_id], references: [id], onDelete: Cascade)
  units                            units                         @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model apportionment_fractions_group {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  condominium_id          Int
  created_at              DateTime?                 @db.Timestamptz(6)
  updated_at              DateTime?                 @db.Timestamptz(6)
  deleted_at              DateTime?                 @db.Timestamptz(6)
  condominiums            condominiums              @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  apportionment_fractions apportionment_fractions[]
  bills_collection        bills_collection[]
}

model apportionment_values {
  id                           Int                        @id @default(autoincrement())
  value                        Float?
  unit_id                      Int
  apportionment_values_list_id Int
  created_at                   DateTime?                  @db.Timestamptz(6)
  updated_at                   DateTime?                  @db.Timestamptz(6)
  deleted_at                   DateTime?                  @db.Timestamptz(6)
  apportionment_values_lists   apportionment_values_lists @relation(fields: [apportionment_values_list_id], references: [id], onDelete: Cascade)
  units                        units                      @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model apportionment_values_lists {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @db.VarChar(255)
  condominium_id       Int
  created_at           DateTime?              @db.Timestamptz(6)
  updated_at           DateTime?              @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  condominiums         condominiums           @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  apportionment_values apportionment_values[]
  bills_collection     bills_collection[]
}

model attachments_types {
  type              String              @id @db.VarChar(255)
  documents_release documents_release[]
}

model available_widgets_options {
  id             Int           @id @default(autoincrement())
  option_name    String        @db.VarChar(255)
  default_values String[]      @db.VarChar(255)
  widget_type_id Int
  created_at     DateTime?     @db.Timestamptz(6)
  updated_at     DateTime?     @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  widgets_types  widgets_types @relation(fields: [widget_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model available_widgets_sizes {
  id             Int           @id @default(autoincrement())
  height         Int
  width          Int
  widget_type_id Int
  created_at     DateTime?     @db.Timestamptz(6)
  updated_at     DateTime?     @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  widgets_types  widgets_types @relation(fields: [widget_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model bank_account_update_history {
  id                      Int      @id @default(autoincrement())
  bank_account_default_id Int
  bank_account_current_id Int      @unique
  created_at              DateTime @default(now()) @db.Timestamptz(6)
}

model bank_collections {
  id                                          Int       @id @default(autoincrement())
  agreement_number                            Int
  portfolio_number                            Int
  portfolio_variation_number                  Int
  modality_code                               Int
  date_issue                                  DateTime  @db.Timestamptz(6)
  due_date                                    DateTime  @db.Timestamptz(6)
  original_amount                             Float
  acceptance_code                             String    @db.VarChar(1)
  securities_type_code                        String    @db.VarChar(255)
  indicator_of_assumption_for_partial_receipt String    @db.VarChar(255)
  pix_indicator                               String    @db.VarChar(255)
  beneficiary_inscription_type                Int
  beneficiary_inscription_number              String    @db.VarChar(255)
  beneficiary_name                            String    @db.VarChar(255)
  payer_inscription_type                      Int
  payer_inscription_number                    String    @db.VarChar(255)
  payer_name                                  String?   @db.VarChar(255)
  payer_address                               String    @db.VarChar(255)
  payer_neighborhood                          String    @db.VarChar(255)
  payer_city                                  String    @db.VarChar(255)
  payer_state                                 String    @db.VarChar(255)
  payer_zip_code                              String    @db.VarChar(255)
  payer_phone                                 String?   @db.VarChar(255)
  reduction_amount                            Float?
  amount_paid                                 Float?
  pay_day                                     DateTime? @db.Timestamptz(6)
  number_of_days_to_protest                   Int?
  number_od_days_for_denial                   Int?
  negative_organ                              Int?
  acceptance_indicator_for_expired_securities String?   @db.VarChar(255)
  limit_number_of_days_for_receipt            Int?
  securities_type_description                 String?   @db.VarChar(255)
  beneficiary_title_number                    String?   @db.VarChar(255)
  beneficiary_field_of_use                    String?   @db.VarChar(255)
  bloqueto_occurrence_message                 String?   @db.VarChar(255)
  client_title_number                         String?   @db.VarChar(255)
  our_number                                  String?   @db.VarChar(255)
  client_code                                 String?   @db.VarChar(255)
  digitable_line                              String?   @db.VarChar(255)
  numeric_barcode                             String?   @db.VarChar(255)
  billing_contract_number                     String?   @db.VarChar(255)
  discount_type                               String?   @db.VarChar(255)
  discount_expiration_date                    DateTime? @db.Timestamptz(6)
  discount_value                              Float?
  discount_percentage                         Float?
  late_payment_interest_type                  String?   @db.VarChar(255)
  late_payment_interest_value                 Float?
  late_payment_interest_percentage            Float?
  fee_type                                    String?   @db.VarChar(255)
  fee_expiration_date                         DateTime? @db.Timestamptz(6)
  fee_value                                   Float?
  fee_percentage                              Float?
  interest_type                               String?   @db.VarChar(255)
  interest_value                              Float?
  interest_percentage                         Float?
  pix_url                                     String?   @db.VarChar(255)
  pix_tx_id                                   String?   @db.VarChar(255)
  pix_emv                                     String?   @db.VarChar(255)
  payed_amount                                Float?
  payed_date                                  DateTime? @db.Timestamptz(6)
  cancelled                                   Boolean?
  cancelled_date                              DateTime? @db.Timestamptz(6)
  created_at                                  DateTime  @db.Timestamptz(6)
  updated_at                                  DateTime  @db.Timestamptz(6)
  deleted_at                                  DateTime? @db.Timestamptz(6)
  bills                                       bills[]
}

model bankaccount {
  id                                                            Int                               @id @default(autoincrement())
  name                                                          String?                           @db.VarChar(255)
  bank                                                          String?                           @db.VarChar(255)
  agency                                                        String?                           @db.VarChar(255)
  account                                                       String?                           @db.VarChar(255)
  opening_balance                                               Float                             @default(0)
  date_opening_balance                                          DateTime?                         @db.Timestamptz(6)
  condominium_id                                                Int?
  company_id                                                    Int?
  created_at                                                    DateTime                          @db.Timestamptz(6)
  updated_at                                                    DateTime                          @db.Timestamptz(6)
  deleted_at                                                    DateTime?                         @db.Timestamptz(6)
  active                                                        Boolean?                          @default(false)
  provisional_account                                           Boolean?                          @default(false)
  position                                                      Int?
  account_type                                                  String?                           @db.VarChar(255)
  employee_id                                                   Int?
  balance                                                       Decimal                           @default(0) @db.Decimal(10, 2)
  operation                                                     Int?
  pix_key                                                       String?                           @db.VarChar(255)
  provider_id                                                   Int?
  pix_key_type                                                  enum_bankaccount_pix_key_type?
  owner                                                         String?                           @db.VarChar(255)
  cnpj_cpf                                                      String?                           @db.VarChar(255)
  code_bank                                                     String?                           @db.VarChar(3)
  dg_agency                                                     String?                           @db.VarChar(255)
  dg_account                                                    String?                           @db.VarChar(255)
  main                                                          Boolean?
  receipt_account                                               Boolean?
  render                                                        Boolean                           @default(true)
  previous_balance                                              Float?
  automatic_download                                            Int?                              @default(30)
  monetary_correction_id                                        Int?                              @default(1)
  uuid                                                          String
  companies_bankaccount_company_idTocompanies                   companies?                        @relation("bankaccount_company_idTocompanies", fields: [company_id], references: [id], onDelete: Cascade)
  condominiums_bankaccount_condominium_idTocondominiums         condominiums?                     @relation("bankaccount_condominium_idTocondominiums", fields: [condominium_id], references: [id], onDelete: Cascade)
  employees                                                     employees?                        @relation(fields: [employee_id], references: [id], onDelete: Cascade)
  monetary_correction                                           monetary_correction?              @relation(fields: [monetary_correction_id], references: [id], onDelete: Cascade)
  providers                                                     providers?                        @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  bankaccount_bills_config                                      bankaccount_bills_config[]
  bills                                                         bills[]
  bills_groups_collections                                      bills_groups_collections[]
  companies_bankaccountTocompanies_bankaccount_default_id       companies[]                       @relation("bankaccountTocompanies_bankaccount_default_id")
  condominiums_bankaccountTocondominiums_bankaccount_default_id condominiums[]                    @relation("bankaccountTocondominiums_bankaccount_default_id")
  extracts                                                      extracts[]
  groups_restriction_bankaccounts                               groups_restriction_bankaccounts[]
  monetary                                                      monetary[]
  releases_bankaccountToreleases_bank_transf_id                 releases[]                        @relation("bankaccountToreleases_bank_transf_id")
  releases_bankaccountToreleases_bankaccount_id                 releases[]                        @relation("bankaccountToreleases_bankaccount_id")
  remittance_configs                                            remittance_configs[]
  remittances                                                   remittances[]
  return_files                                                  return_files[]
}

model bankaccount_bills_config {
  id                  Int         @id @default(autoincrement())
  codigo_beneficiario String?     @db.VarChar(255)
  carteira            String?     @db.VarChar(255)
  variacao_carteira   String?     @db.VarChar(255)
  bankaccount_id      Int
  created_at          DateTime    @db.Timestamptz(6)
  updated_at          DateTime    @db.Timestamptz(6)
  deleted_at          DateTime?   @db.Timestamptz(6)
  bankaccount         bankaccount @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
}

model banks {
  id         Int       @id @default(autoincrement())
  cod_bank   String?   @db.VarChar(255)
  name       String?   @db.VarChar(255)
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
}

model bill_complements {
  id                       Int                      @id @default(autoincrement())
  description              String?
  value                    Float
  bill_id                  Int?
  plan_account_category_id Int?
  created_at               DateTime                 @db.Timestamptz(6)
  updated_at               DateTime                 @db.Timestamptz(6)
  deleted_at               DateTime?                @db.Timestamptz(6)
  bills                    bills?                   @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  plan_account_categories  plan_account_categories? @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
}

model bill_notifications {
  id                            Int                         @id @default(autoincrement())
  notification_configuration_id Int
  bill_id                       Int
  execute_at                    DateTime                    @db.Timestamptz(6)
  created_at                    DateTime                    @db.Timestamptz(6)
  updated_at                    DateTime                    @db.Timestamptz(6)
  deleted_at                    DateTime?                   @db.Timestamptz(6)
  bills                         bills                       @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  notifications_configuration   notifications_configuration @relation(fields: [notification_configuration_id], references: [id], onDelete: Cascade)
}

model bill_status {
  id         Int       @id @default(autoincrement())
  code       String    @db.VarChar(255)
  name       String    @db.VarChar(255)
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  bills      bills[]
}

model billing_items {
  id                      Int                     @id @default(autoincrement())
  billing_id              Int
  category_id             Int
  complement              String?                 @db.VarChar(255)
  amount                  Decimal                 @db.Decimal(10, 2)
  created_at              DateTime                @db.Timestamptz(6)
  updated_at              DateTime                @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  billings                billings                @relation(fields: [billing_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  plan_account_categories plan_account_categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model billings {
  id               Int             @id @default(autoincrement())
  unit_id          Int
  release_id       Int?
  bill_id          Int?
  expiration_date  DateTime        @db.Timestamptz(6)
  competence_date  DateTime        @db.Timestamptz(6)
  created_at       DateTime        @db.Timestamptz(6)
  updated_at       DateTime        @db.Timestamptz(6)
  deleted_at       DateTime?       @db.Timestamptz(6)
  is_extraordinary Boolean         @default(false)
  bills            bills?          @relation(fields: [bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  releases         releases?       @relation(fields: [release_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units            units           @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  billing_items    billing_items[]
}

model bills {
  id                                                           Int                        @id @default(autoincrement())
  data_vencimento                                              DateTime                   @db.Timestamptz(6)
  valor                                                        Decimal                    @db.Decimal(10, 2)
  juros                                                        Float?                     @default(0)
  multa                                                        Float?                     @default(0)
  desconto                                                     Float?                     @default(0)
  taxa_extraordinaria                                          Boolean?                   @default(false)
  data_competencia                                             DateTime?                  @db.Timestamptz(6)
  company_id                                                   Int?
  condominium_id                                               Int?
  unit_id                                                      Int?
  bankaccount_id                                               Int?
  remittance_id                                                Int?
  created_at                                                   DateTime                   @db.Timestamptz(6)
  updated_at                                                   DateTime                   @db.Timestamptz(6)
  deleted_at                                                   DateTime?                  @db.Timestamptz(6)
  msg_pagador_1                                                String?                    @default("Não aceitar após o vencimento") @db.VarChar(255)
  msg_pagador_2                                                String?                    @default("  ") @db.VarChar(255)
  nosso_numero                                                 String?                    @db.VarChar(255)
  data_credito                                                 DateTime?                  @db.Timestamptz(6)
  data_do_liquidacao                                           DateTime?                  @db.Timestamptz(6)
  valor_pago                                                   Float?
  generated                                                    Boolean                    @default(false)
  collection_id                                                Int?
  bill_status_id                                               Int?
  original                                                     Boolean                    @default(false)
  url                                                          String?
  internal_id                                                  Int                        @unique @default(autoincrement())
  payment_method                                               enum_bills_payment_method?
  juros_pago                                                   Float?
  multa_pago                                                   Float?
  atualizacao_pago                                             Float?
  desconto_concedido                                           Float?
  voucher_url                                                  String?
  extraordinary_bill_id                                        Int?
  releases_id                                                  Int?
  bills_collection_id                                          Int?
  message_return                                               String?                    @db.VarChar(255)
  desconto_politica                                            String?                    @db.VarChar(255)
  dias_para_desconto                                           Int?
  pro_rate                                                     Boolean                    @default(false)
  calculate_with_value_default_rate                            Boolean                    @default(false)
  message_error                                                String?                    @db.VarChar(255)
  bar_code                                                     String?                    @db.VarChar(255)
  is_old                                                       Boolean?                   @default(false)
  bank_collection_id                                           Int?
  typeful_line                                                 String?                    @db.VarChar(255)
  plin_boletos_id                                              String?                    @db.VarChar(255)
  pix_copy_and_paste                                           String?                    @db.VarChar(255)
  bank_collections                                             bank_collections?          @relation(fields: [bank_collection_id], references: [id])
  bankaccount                                                  bankaccount?               @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  bill_status                                                  bill_status?               @relation(fields: [bill_status_id], references: [id], onDelete: Cascade)
  bills_collection_bills_bills_collection_idTobills_collection bills_collection?          @relation("bills_bills_collection_idTobills_collection", fields: [bills_collection_id], references: [id], onDelete: Cascade)
  bills_collection_bills_collection_idTobills_collection       bills_collection?          @relation("bills_collection_idTobills_collection", fields: [collection_id], references: [id], onDelete: Cascade)
  companies                                                    companies?                 @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                                                 condominiums?              @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  bills                                                        bills?                     @relation("billsTobills", fields: [extraordinary_bill_id], references: [id], onDelete: Cascade)
  releases_bills_releases_idToreleases                         releases?                  @relation("bills_releases_idToreleases", fields: [releases_id], references: [id], onDelete: Cascade)
  remittances                                                  remittances?               @relation(fields: [remittance_id], references: [id], onDelete: Cascade)
  units                                                        units?                     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  bill_complements                                             bill_complements[]
  bill_notifications                                           bill_notifications[]
  billings                                                     billings[]
  other_bills                                                  bills[]                    @relation("billsTobills")
  bills_collection_units                                       bills_collection_units[]
  documents                                                    documents[]
  notifications                                                notifications[]
  receipt_bills                                                receipt_bills[]
  releases_billsToreleases_bill_id                             releases[]                 @relation("billsToreleases_bill_id")
  reserves                                                     reserves[]
  return_file_bills                                            return_file_bills[]
}

model bills_collection {
  id                                                Int                             @id @default(autoincrement())
  value                                             Decimal                         @db.Decimal(10, 2)
  current_portion                                   Int?
  portion                                           Int?
  date_initial                                      DateTime?                       @db.Timestamptz(6)
  date_final                                        DateTime?                       @db.Timestamptz(6)
  recurrent                                         Boolean                         @default(false)
  complement                                        String?                         @db.VarChar(255)
  group_id                                          Int?
  plan_account_category_id                          Int?
  cost_center_id                                    Int?
  created_at                                        DateTime                        @db.Timestamptz(6)
  updated_at                                        DateTime                        @db.Timestamptz(6)
  deleted_at                                        DateTime?                       @db.Timestamptz(6)
  parent_id                                         Int?
  how_collect                                       String?                         @db.VarChar(255)
  interval                                          enum_bills_collection_interval?
  generated                                         Boolean?
  relation_id                                       Int?
  consumption_id                                    Int?
  apportionment_values_list_id                      Int?
  apportionment_fractions_group_id                  Int?
  release_id                                        Int?
  fraction_reduction                                Boolean?                        @default(false)
  show_fractions                                    Boolean?                        @default(false)
  discounted_value                                  Float?
  expenses_month                                    DateTime?                       @db.Timestamptz(6)
  apportionment_fractions_group                     apportionment_fractions_group?  @relation(fields: [apportionment_fractions_group_id], references: [id])
  apportionment_values_lists                        apportionment_values_lists?     @relation(fields: [apportionment_values_list_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  consumptions                                      consumptions?                   @relation(fields: [consumption_id], references: [id], onDelete: Cascade)
  cost_centers                                      cost_centers?                   @relation(fields: [cost_center_id], references: [id], onDelete: Cascade)
  bills_groups_collections                          bills_groups_collections?       @relation(fields: [group_id], references: [id], onDelete: Cascade)
  bills_collection                                  bills_collection?               @relation("bills_collectionTobills_collection", fields: [parent_id], references: [id], onDelete: Cascade)
  plan_account_categories                           plan_account_categories?        @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
  bills_collection_relations                        bills_collection_relations?     @relation(fields: [relation_id], references: [id], onDelete: Cascade)
  releases                                          releases?                       @relation(fields: [release_id], references: [id])
  bills_bills_bills_collection_idTobills_collection bills[]                         @relation("bills_bills_collection_idTobills_collection")
  bills_bills_collection_idTobills_collection       bills[]                         @relation("bills_collection_idTobills_collection")
  other_bills_collection                            bills_collection[]              @relation("bills_collectionTobills_collection")
  bills_collection_scheduling                       bills_collection_scheduling[]
  bills_collection_units                            bills_collection_units[]
}

model bills_collection_relations {
  id               Int                @id @default(autoincrement())
  created_at       DateTime           @db.Timestamptz(6)
  updated_at       DateTime           @db.Timestamptz(6)
  bills_collection bills_collection[]
}

model bills_collection_scheduling {
  id               Int              @id @default(autoincrement())
  date             DateTime         @db.Timestamptz(6)
  collection_id    Int
  created_at       DateTime         @db.Timestamptz(6)
  updated_at       DateTime         @db.Timestamptz(6)
  deleted_at       DateTime?        @db.Timestamptz(6)
  bills_collection bills_collection @relation(fields: [collection_id], references: [id], onDelete: Cascade)
}

model bills_collection_units {
  id               Int              @id @default(autoincrement())
  value            Decimal          @db.Decimal(10, 2)
  due_date         DateTime         @db.Timestamptz(6)
  bill_id          Int?
  collection_id    Int
  unit_id          Int
  created_at       DateTime         @db.Timestamptz(6)
  updated_at       DateTime         @db.Timestamptz(6)
  deleted_at       DateTime?        @db.Timestamptz(6)
  fraction         Float?
  bills            bills?           @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  bills_collection bills_collection @relation(fields: [collection_id], references: [id], onDelete: Cascade)
  units            units            @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  measurements     measurements[]
  reserves         reserves[]
}

model bills_config {
  id                       Int           @id(map: "condominium_bills_config_pkey") @default(autoincrement())
  codigo_cedente           String?       @db.VarChar(255)
  digito_codigo_cedente    String?       @db.VarChar(255)
  numero_documento         String?       @db.VarChar(255)
  tipo_inscricao_pagador   Int?
  valor_multa              Decimal?      @db.Decimal(10, 2)
  tipo_multa               Int?
  dias_p_multa             Int?
  dias_p_juros             Int?
  tipo_juros               Int?
  valor_juros              Decimal?      @db.Decimal(10, 2)
  tipo_desconto            String?       @db.VarChar(255)
  dias_p_desconto          Int?
  valor_desconto           Decimal?      @db.Decimal(10, 2)
  valor_iof                Decimal?      @db.Decimal(10, 2)
  valor_abatimento         Decimal?      @db.Decimal(10, 2)
  codigo_protesto          Int?
  dias_p_protesto          Int?
  codigo_baixa_devolucao   Int?
  n_dias_p_baixa_devolucao Int?
  msg_df_blto_1            String?       @db.VarChar(255)
  msg_df_blto_2            String?       @db.VarChar(255)
  created_at               DateTime      @db.Timestamptz(6)
  updated_at               DateTime      @db.Timestamptz(6)
  deleted_at               DateTime?     @db.Timestamptz(6)
  company_id               Int?
  condominium_id           Int?
  companies                companies?    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums             condominiums? @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
}

model bills_groups_collections {
  id                                 Int                                 @id @default(autoincrement())
  name                               String                              @db.VarChar(255)
  due_date                           Int
  bankaccount_id                     Int
  created_at                         DateTime                            @db.Timestamptz(6)
  updated_at                         DateTime                            @db.Timestamptz(6)
  deleted_at                         DateTime?                           @db.Timestamptz(6)
  relation_id                        Int?
  bills_generated                    Boolean?
  is_default                         Boolean?                            @default(false)
  is_extraordinary                   Boolean?
  billing_due_date                   DateTime?                           @db.Timestamptz(6)
  others_infos                       String?                             @db.VarChar(5000)
  competence_date                    DateTime?                           @db.Timestamptz(6)
  creation_timestamp                 DateTime?                           @db.Timestamptz(6)
  bankaccount                        bankaccount                         @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  bills_groups_collections_relations bills_groups_collections_relations? @relation(fields: [relation_id], references: [id], onDelete: Cascade)
  bills_collection                   bills_collection[]
}

model bills_groups_collections_relations {
  id                       Int                        @id @default(autoincrement())
  created_at               DateTime                   @db.Timestamptz(6)
  updated_at               DateTime                   @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamptz(6)
  bills_groups_collections bills_groups_collections[]
}

model blocks {
  id             Int          @id @default(autoincrement())
  name           String       @db.VarChar(255)
  condominium_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  parkings       parkings[]
  units          units[]
}

model business_positions {
  id                                      Int                                       @id @default(autoincrement())
  cod_position                            String                                    @db.VarChar(255)
  name                                    String                                    @db.VarChar(255)
  description                             String                                    @db.VarChar(255)
  created_at                              DateTime                                  @db.Timestamptz(6)
  updated_at                              DateTime                                  @db.Timestamptz(6)
  deleted_at                              DateTime?                                 @db.Timestamptz(6)
  condominium                             Boolean?
  employees                               employees[]
  packages_problem_notifications_settings packages_problem_notifications_settings[]
}

model calendar_guests {
  id          Int       @id @default(autoincrement())
  calendar_id Int
  user_id     Int
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  calendars   calendars @relation(fields: [calendar_id], references: [id], onDelete: Cascade)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model calendars {
  id              Int               @id @default(autoincrement())
  title           String            @db.VarChar(255)
  description     String?
  inicial_date    DateTime          @db.Timestamptz(6)
  final_date      DateTime?         @db.Timestamptz(6)
  all_date        Boolean           @default(false)
  all_see         Boolean           @default(false)
  color           String?           @db.VarChar(255)
  created_by      Int?
  created_at      DateTime          @db.Timestamptz(6)
  updated_at      DateTime          @db.Timestamptz(6)
  deleted_at      DateTime?         @db.Timestamptz(6)
  users           users?            @relation(fields: [created_by], references: [id], onDelete: Cascade)
  calendar_guests calendar_guests[]
}

model cities {
  id        Int         @id @default(autoincrement())
  name      String?     @db.VarChar(255)
  state_id  Int
  states    states      @relation(fields: [state_id], references: [id], onDelete: Cascade)
  addresses addresses[]
}

model companies {
  id                                                        Int                         @id @default(autoincrement())
  name                                                      String                      @db.VarChar(255)
  created_at                                                DateTime                    @db.Timestamptz(6)
  updated_at                                                DateTime                    @db.Timestamptz(6)
  deleted_at                                                DateTime?                   @db.Timestamptz(6)
  cnpj                                                      String?                     @db.VarChar(255)
  fantasy_name                                              String?                     @db.VarChar(255)
  cep                                                       Int?
  address                                                   String?                     @db.VarChar(255)
  complement                                                String?                     @db.VarChar(255)
  neighborhood                                              String?                     @db.VarChar(255)
  city                                                      String?                     @db.VarChar(255)
  state                                                     String?                     @db.VarChar(255)
  billing_email                                             String?                     @db.VarChar(255)
  phone                                                     BigInt?
  cellphone                                                 BigInt?
  ie                                                        String?                     @db.VarChar(255)
  im                                                        String?                     @db.VarChar(255)
  system_plan                                               Int?
  taxation                                                  String?                     @db.VarChar(255)
  cnae                                                      String[]                    @db.VarChar(255)
  tax_classification                                        String?                     @db.VarChar(255)
  legal_services                                            String?                     @db.VarChar(255)
  number                                                    String?                     @db.VarChar(255)
  nickname                                                  String?                     @db.VarChar(255)
  bankaccount_default_id                                    Int?
  default_monetary_id                                       Int?
  bills_bucket_id                                           String?                     @unique @db.VarChar(255)
  uuid                                                      String                      @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bill_tax                                                  Decimal?                    @db.Decimal(10, 2)
  bankaccount_bankaccountTocompanies_bankaccount_default_id bankaccount?                @relation("bankaccountTocompanies_bankaccount_default_id", fields: [bankaccount_default_id], references: [id], onDelete: Cascade)
  monetary                                                  monetary?                   @relation(fields: [default_monetary_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bankaccount_bankaccount_company_idTocompanies             bankaccount[]               @relation("bankaccount_company_idTocompanies")
  bills                                                     bills[]
  bills_config                                              bills_config[]
  company_contacts                                          company_contacts[]
  condominiums                                              condominiums[]
  cost_centers                                              cost_centers[]
  directory_documents                                       directory_documents[]
  directory_documents_share                                 directory_documents_share[]
  documents                                                 documents[]
  documents_company                                         documents_company[]
  employee_accesses                                         employee_accesses[]
  employee_attachment_types                                 employee_attachment_types[]
  employees                                                 employees[]
  extracts                                                  extracts[]
  favorite_reports                                          favorite_reports[]
  groups                                                    groups[]
  notifications                                             notifications[]
  plan_accounts                                             plan_accounts[]
  providers                                                 providers[]
  remittances                                               remittances[]
  report_associations                                       report_associations[]
  report_categories                                         report_categories[]
  report_selections                                         report_selections[]
  reserve_actions_log                                       reserve_actions_log[]
  return_files                                              return_files[]
  shares                                                    shares[]
  user_access_company                                       user_access_company[]
  virtual_areas                                             virtual_areas[]
  widgets_dashboard                                         widgets_dashboard[]
}

model company_contacts {
  id         Int       @id @default(autoincrement())
  cellphone  BigInt?
  phone      BigInt?
  email      String?   @db.VarChar(255)
  company_id Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
}

model company_modules {
  id        Int     @id @default(autoincrement())
  module_id Int
  modules   modules @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model condominium_contacts {
  id             Int          @id @default(autoincrement())
  email          String?      @db.VarChar(255)
  phone          BigInt?
  cellphone      BigInt?
  condominium_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
}

model condominium_modules {
  id        Int     @id @default(autoincrement())
  module_id Int
  modules   modules @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model condominium_steps {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(255)
  done           Boolean?      @default(false)
  condominium_id Int?
  created_at     DateTime      @db.Timestamptz(6)
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model condominiums {
  id                                                           Int                             @id @default(autoincrement())
  name                                                         String?                         @db.VarChar(255)
  id_company                                                   Int
  created_at                                                   DateTime                        @db.Timestamptz(6)
  updated_at                                                   DateTime                        @db.Timestamptz(6)
  deleted_at                                                   DateTime?                       @db.Timestamptz(6)
  cnpj                                                         String?                         @db.VarChar(255)
  fantasy_name                                                 String?                         @db.VarChar(255)
  nickname                                                     String?                         @db.VarChar(255)
  cep                                                          Int?
  address                                                      String?                         @db.VarChar(255)
  complement                                                   String?                         @db.VarChar(255)
  neighborhood                                                 String?                         @db.VarChar(255)
  city                                                         String?                         @db.VarChar(255)
  state                                                        String?                         @db.VarChar(255)
  ie                                                           String?                         @db.VarChar(255)
  im                                                           String?                         @db.VarChar(255)
  system_plan                                                  Int?
  taxation                                                     String?                         @db.VarChar(255)
  tax_classification                                           String?                         @db.VarChar(255)
  legal_services                                               String?                         @db.VarChar(255)
  institution_date                                             DateTime?                       @db.Timestamptz(6)
  building_area                                                String?                         @db.VarChar(255)
  vertical                                                     Boolean                         @default(false)
  horizontal                                                   Boolean                         @default(false)
  residential                                                  Boolean                         @default(false)
  commercial                                                   Boolean                         @default(false)
  syndic                                                       String?                         @db.VarChar(255)
  non_payment                                                  Boolean?
  number                                                       String?                         @db.VarChar(255)
  characteristics                                              String?                         @db.VarChar(255)
  cnae                                                         String[]                        @db.VarChar(255)
  units_fractions                                              Float?
  bankaccount_default_id                                       Int?
  default_monetary_id                                          Int?
  plan_account_id                                              Int?
  bills_bucket_id                                              String?                         @unique @db.VarChar(255)
  observations                                                 String?                         @db.VarChar(20000)
  uuid                                                         String                          @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  split_id                                                     String?                         @db.VarChar(255)
  bankaccount_bankaccountTocondominiums_bankaccount_default_id bankaccount?                    @relation("bankaccountTocondominiums_bankaccount_default_id", fields: [bankaccount_default_id], references: [id], onDelete: Cascade)
  monetary                                                     monetary?                       @relation(fields: [default_monetary_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies                                                    companies                       @relation(fields: [id_company], references: [id], onDelete: Cascade)
  plan_accounts                                                plan_accounts?                  @relation(fields: [plan_account_id], references: [id])
  access_center_guests                                         access_center_guests[]
  access_center_settings                                       access_center_settings?
  announcements                                                announcements[]
  apportionment_fractions_group                                apportionment_fractions_group[]
  apportionment_values_lists                                   apportionment_values_lists[]
  bankaccount_bankaccount_condominium_idTocondominiums         bankaccount[]                   @relation("bankaccount_condominium_idTocondominiums")
  bills                                                        bills[]
  bills_config                                                 bills_config[]
  blocks                                                       blocks[]
  condominium_contacts                                         condominium_contacts[]
  condominium_steps                                            condominium_steps[]
  consumptions                                                 consumptions[]
  cost_centers                                                 cost_centers[]
  directory_documents                                          directory_documents[]
  directory_documents_share                                    directory_documents_share[]
  documents                                                    documents[]
  documents_condominium                                        documents_condominium[]
  employee_accesses                                            employee_accesses[]
  employee_attachment_types                                    employee_attachment_types[]
  employees                                                    employees[]
  extracts                                                     extracts[]
  favorite_reports                                             favorite_reports[]
  group_condominium                                            group_condominium[]
  groups                                                       groups[]
  groups_units                                                 groups_units[]
  inadimplencys                                                inadimplencys[]
  notifications                                                notifications[]
  notifications_configuration                                  notifications_configuration[]
  packages                                                     packages[]
  packages_settings                                            packages_settings[]
  providers                                                    providers[]
  releases                                                     releases[]
  remittances                                                  remittances[]
  report_associations                                          report_associations[]
  report_categories                                            report_categories[]
  report_selections                                            report_selections[]
  reserve_actions_log                                          reserve_actions_log[]
  return_files                                                 return_files[]
  shares                                                       shares[]
  surveys                                                      surveys[]
  syndics                                                      syndics[]
  unit_attachment_types                                        unit_attachment_types[]
  unit_group_fractions                                         unit_group_fractions[]
  unit_group_values                                            unit_group_values[]
  units                                                        units[]
  virtual_area_module_configs                                  virtual_area_module_configs[]
  virtual_areas                                                virtual_areas[]
  warning_center                                               warning_center[]
  widgets_dashboard                                            widgets_dashboard[]
}

model consumption_cost_setups {
  id             Int          @id @default(autoincrement())
  min_range      Decimal      @db.Decimal
  max_range      Decimal      @db.Decimal
  price          Decimal      @db.Decimal
  fixe           Boolean
  consumption_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  consumptions   consumptions @relation(fields: [consumption_id], references: [id], onDelete: Cascade)
}

model consumption_types {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  created_at    DateTime        @db.Timestamptz(6)
  updated_at    DateTime        @db.Timestamptz(6)
  deleted_at    DateTime?       @db.Timestamptz(6)
  consumptions  consumptions[]
  measure_units measure_units[]
}

model consumptions {
  id                       Int                       @id @default(autoincrement())
  name                     String                    @db.VarChar(255)
  tolerated_variation      Float                     @default(0)
  measurement_day          Int
  measure_unit             String                    @db.VarChar(255)
  type_id                  Int
  cost_center_id           Int?
  condominium_id           Int
  created_at               DateTime                  @db.Timestamptz(6)
  updated_at               DateTime                  @db.Timestamptz(6)
  deleted_at               DateTime?                 @db.Timestamptz(6)
  plan_account_category_id Int?
  default_cost             Float                     @default(0)
  has_updated              Boolean?                  @default(false)
  condominiums             condominiums              @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  cost_centers             cost_centers?             @relation(fields: [cost_center_id], references: [id])
  plan_account_categories  plan_account_categories?  @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
  consumption_types        consumption_types         @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bills_collection         bills_collection[]
  consumption_cost_setups  consumption_cost_setups[]
  measurements             measurements[]
  month_consumptions       month_consumptions[]
}

model contacts {
  id             Int              @id @default(autoincrement())
  telephone      String?          @db.VarChar(255)
  cellphone      String?          @db.VarChar(255)
  addresses      addresses[]
  profiles       profiles[]
  unit_owners    unit_owners[]
  unit_residents unit_residents[]
  unit_tenants   unit_tenants[]
}

model cost_centers {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  in_use           Boolean            @default(false)
  position         Int?
  condominium_id   Int?
  company_id       Int?
  created_at       DateTime           @db.Timestamptz(6)
  updated_at       DateTime           @db.Timestamptz(6)
  deleted_at       DateTime?          @db.Timestamptz(6)
  uuid             String             @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  companies        companies?         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums     condominiums?      @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bills_collection bills_collection[]
  consumptions     consumptions[]
  releases         releases[]
  virtual_areas    virtual_areas[]
}

model countries {
  id       Int      @id @default(autoincrement())
  name     String?  @db.VarChar(255)
  initials String?  @db.VarChar(255)
  states   states[]
}

model directory_documents {
  id                                                                                                  Int                           @id @default(autoincrement())
  name                                                                                                String                        @db.VarChar(255)
  type                                                                                                enum_directory_documents_type
  parent                                                                                              Int?
  old_parent                                                                                          Int?
  condominium_id                                                                                      Int?
  company_id                                                                                          Int?
  file_id                                                                                             Int?
  color                                                                                               String?                       @db.VarChar(255)
  size                                                                                                String?                       @db.VarChar(255)
  created_at                                                                                          DateTime                      @db.Timestamptz(6)
  updated_at                                                                                          DateTime                      @db.Timestamptz(6)
  deleted_at                                                                                          DateTime?                     @db.Timestamptz(6)
  companies                                                                                           companies?                    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                                                                                        condominiums?                 @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  files                                                                                               files?                        @relation(fields: [file_id], references: [id], onDelete: Cascade)
  directory_documents                                                                                 directory_documents?          @relation("directory_documentsTodirectory_documents", fields: [parent], references: [id], onDelete: Cascade)
  other_directory_documents                                                                           directory_documents[]         @relation("directory_documentsTodirectory_documents")
  directory_documents_history_directory_documentsTodirectory_documents_history_directory_documents_id directory_documents_history[] @relation("directory_documentsTodirectory_documents_history_directory_documents_id")
  directory_documents_history_directory_documentsTodirectory_documents_history_old_parent             directory_documents_history[] @relation("directory_documentsTodirectory_documents_history_old_parent")
  directory_documents_history_directory_documentsTodirectory_documents_history_parent                 directory_documents_history[] @relation("directory_documentsTodirectory_documents_history_parent")
  directory_documents_share_directory_documentsTodirectory_documents_share_directory_documents_id     directory_documents_share[]   @relation("directory_documentsTodirectory_documents_share_directory_documents_id")
  directory_documents_share_directory_documentsTodirectory_documents_share_publish_to                 directory_documents_share[]   @relation("directory_documentsTodirectory_documents_share_publish_to")
  shared_documents                                                                                    shared_documents[]
}

model directory_documents_history {
  id                                                                                          Int                                    @id @default(autoincrement())
  name                                                                                        String?                                @db.VarChar(255)
  type                                                                                        enum_directory_documents_history_type?
  parent                                                                                      Int?
  old_parent                                                                                  Int?
  color                                                                                       String?                                @db.VarChar(255)
  size                                                                                        String?                                @db.VarChar(255)
  directory_documents_id                                                                      Int
  created_at                                                                                  DateTime                               @db.Timestamptz(6)
  updated_at                                                                                  DateTime                               @db.Timestamptz(6)
  deleted_at                                                                                  DateTime?                              @db.Timestamptz(6)
  directory_documents_directory_documentsTodirectory_documents_history_directory_documents_id directory_documents                    @relation("directory_documentsTodirectory_documents_history_directory_documents_id", fields: [directory_documents_id], references: [id], onDelete: Cascade)
  directory_documents_directory_documentsTodirectory_documents_history_old_parent             directory_documents?                   @relation("directory_documentsTodirectory_documents_history_old_parent", fields: [old_parent], references: [id], onDelete: Cascade)
  directory_documents_directory_documentsTodirectory_documents_history_parent                 directory_documents?                   @relation("directory_documentsTodirectory_documents_history_parent", fields: [parent], references: [id], onDelete: Cascade)
}

model directory_documents_share {
  id                                                                                        Int                  @id @default(autoincrement())
  directory_documents_id                                                                    Int?
  user_id                                                                                   Int?
  group_id                                                                                  Int?
  email                                                                                     String?              @db.VarChar(255)
  company_id                                                                                Int?
  condominium_id                                                                            Int?
  token                                                                                     String?              @db.VarChar(255)
  created_at                                                                                DateTime             @db.Timestamptz(6)
  updated_at                                                                                DateTime             @db.Timestamptz(6)
  deleted_at                                                                                DateTime?            @db.Timestamptz(6)
  publish_to                                                                                Int?
  companies                                                                                 companies?           @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                                                                              condominiums?        @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  directory_documents_directory_documentsTodirectory_documents_share_directory_documents_id directory_documents? @relation("directory_documentsTodirectory_documents_share_directory_documents_id", fields: [directory_documents_id], references: [id], onDelete: Cascade)
  groups                                                                                    groups?              @relation(fields: [group_id], references: [id], onDelete: Cascade)
  directory_documents_directory_documentsTodirectory_documents_share_publish_to             directory_documents? @relation("directory_documentsTodirectory_documents_share_publish_to", fields: [publish_to], references: [id], onDelete: Cascade)
  users                                                                                     users?               @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model documents {
  id             Int           @id @default(autoincrement())
  type           String?       @db.VarChar(255)
  file_id        Int
  company_id     Int?
  condominium_id Int?
  bill_id        Int?
  created_at     DateTime      @db.Timestamptz(6)
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  bills          bills?        @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  companies      companies?    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  files          files         @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model documents_company {
  id         Int       @id @default(autoincrement())
  company_id Int
  file_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  files      files     @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model documents_condominium {
  id             Int          @id @default(autoincrement())
  type           String       @db.VarChar(255)
  condominium_id Int
  file_id        Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  files          files        @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model documents_measurement {
  id             Int          @id @default(autoincrement())
  file_id        Int
  measurement_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  user_id        Int?
  files          files        @relation(fields: [file_id], references: [id], onDelete: Cascade)
  measurements   measurements @relation(fields: [measurement_id], references: [id], onDelete: Cascade)
  users          users?       @relation(fields: [user_id], references: [id])
}

model documents_release {
  id                Int                @id @default(autoincrement())
  type              String?            @db.VarChar(255)
  release_id        Int
  file_id           Int
  created_at        DateTime           @db.Timestamptz(6)
  updated_at        DateTime           @db.Timestamptz(6)
  deleted_at        DateTime?          @db.Timestamptz(6)
  attachment_type   String?            @db.VarChar(255)
  attachments_types attachments_types? @relation(fields: [attachment_type], references: [type], onDelete: NoAction, onUpdate: NoAction)
  files             files              @relation(fields: [file_id], references: [id], onDelete: Cascade)
  releases          releases           @relation(fields: [release_id], references: [id], onDelete: Cascade)
}

model documents_syndic {
  id         Int       @id @default(autoincrement())
  type       String    @db.VarChar(255)
  syndic_id  Int
  file_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  files      files     @relation(fields: [file_id], references: [id], onDelete: Cascade)
  syndics    syndics   @relation(fields: [syndic_id], references: [id], onDelete: Cascade)
}

model employee_attachment_types {
  id                   Int                    @id @default(autoincrement())
  name                 String?                @db.VarChar(255)
  created_at           DateTime               @db.Timestamptz(6)
  updated_at           DateTime               @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  condominium_id       Int?
  company_id           Int?
  companies            companies?             @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums         condominiums?          @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee_attachments employee_attachments[]
}

model employee_benefit {
  id          Int                        @id @default(autoincrement())
  name        enum_employee_benefit_name
  company     String                     @db.VarChar(255)
  value       Float
  employee_id Int
  created_at  DateTime                   @db.Timestamptz(6)
  updated_at  DateTime                   @db.Timestamptz(6)
  deleted_at  DateTime?                  @db.Timestamptz(6)
  employees   employees                  @relation(fields: [employee_id], references: [id], onDelete: Cascade)
}

model employee_documents {
  id          Int       @id @default(autoincrement())
  type        String?   @db.VarChar(255)
  file_id     Int
  employee_id Int
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  employees   employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)
  files       files     @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model employee_emails {
  id          Int       @id @default(autoincrement())
  employee_id Int
  email       String    @db.VarChar(255)
  employees   employees @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee_module_permissions {
  id                 Int               @id @default(autoincrement())
  created_at         DateTime          @default(now()) @db.Timestamptz(6)
  updated_at         DateTime          @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?         @db.Timestamptz(6)
  employee_access_id Int
  module_id          Int?
  employee_accesses  employee_accesses @relation(fields: [employee_access_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  modules            modules?          @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model employee_phones {
  id          Int       @id @default(autoincrement())
  employee_id Int
  phone       String    @db.VarChar(255)
  employees   employees @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee_status {
  id          Int         @id @default(autoincrement())
  description String      @db.VarChar(255)
  created_at  DateTime    @db.Timestamptz(6)
  updated_at  DateTime    @db.Timestamptz(6)
  deleted_at  DateTime?   @db.Timestamptz(6)
  employees   employees[]
}

model employees {
  id                    Int                    @id @default(autoincrement())
  full_name             String                 @db.VarChar(255)
  identification_number String?                @db.VarChar(255)
  employee_position_id  Int
  employee_status_id    Int
  company_id            Int?
  work_permit_number    String?                @db.VarChar(255)
  created_at            DateTime               @db.Timestamptz(6)
  updated_at            DateTime               @db.Timestamptz(6)
  deleted_at            DateTime?              @db.Timestamptz(6)
  working_hours_id      Int?
  salary                String?                @db.VarChar(255)
  hiring_type           String?                @db.VarChar(255)
  condominium_id        Int?
  profile_id            Int?
  address_id            Int?
  avatar_id             Int?
  is_master             Boolean                @default(false)
  addresses             addresses?             @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  files                 files?                 @relation(fields: [avatar_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies             companies?             @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums          condominiums?          @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  business_positions    business_positions     @relation(fields: [employee_position_id], references: [id], onDelete: Cascade)
  employee_status       employee_status        @relation(fields: [employee_status_id], references: [id], onDelete: Cascade)
  profiles              profiles?              @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  working_hours         working_hours?         @relation(fields: [working_hours_id], references: [id], onDelete: Cascade)
  bankaccount           bankaccount[]
  employee_accesses     employee_accesses[]
  employee_attachments  employee_attachments[]
  employee_benefit      employee_benefit[]
  employee_documents    employee_documents[]
  employee_emails       employee_emails[]
  employee_phones       employee_phones[]
}

model extract_releases_relation {
  id                 Int              @id @default(autoincrement())
  release_id         Int
  extract_release_id Int
  created_at         DateTime         @db.Timestamptz(6)
  updated_at         DateTime         @db.Timestamptz(6)
  deleted_at         DateTime?        @db.Timestamptz(6)
  extract_releases   extract_releases @relation("extract_releases_relationToextract_releases", fields: [extract_release_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  releases           releases         @relation(fields: [release_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("extract-releases_relation")
}

model extract_releases {
  id                        Int                         @id @default(autoincrement())
  date                      DateTime                    @db.Timestamptz(6)
  status                    String                      @db.VarChar(255)
  description               String                      @db.VarChar(255)
  value                     Float
  payment_method_type_id    Int
  extract_id                Int
  release_id                Int?
  created_at                DateTime                    @db.Timestamptz(6)
  updated_at                DateTime                    @db.Timestamptz(6)
  deleted_at                DateTime?                   @db.Timestamptz(6)
  extracts                  extracts                    @relation(fields: [extract_id], references: [id], onDelete: Cascade)
  payment_method_types      payment_method_types        @relation(fields: [payment_method_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  releases                  releases?                   @relation(fields: [release_id], references: [id], onDelete: Cascade)
  extract_releases_relation extract_releases_relation[] @relation("extract_releases_relationToextract_releases")
}

model extracts {
  id               Int                @id @default(autoincrement())
  date             DateTime           @db.Timestamptz(6)
  condominium_id   Int?
  company_id       Int?
  bank_account_id  Int
  created_at       DateTime           @db.Timestamptz(6)
  updated_at       DateTime           @db.Timestamptz(6)
  deleted_at       DateTime?          @db.Timestamptz(6)
  name             String?            @db.VarChar(255)
  file_id          Int
  bankaccount      bankaccount        @relation(fields: [bank_account_id], references: [id], onDelete: Cascade)
  companies        companies?         @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums     condominiums?      @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  files            files              @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  extract_releases extract_releases[]
}

model favorite_reports {
  id             Int           @id @default(autoincrement())
  report_id      Int
  condominium_id Int?
  company_id     Int?
  created_at     DateTime      @db.Timestamptz(6)
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  companies      companies?    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  reports        reports       @relation(fields: [report_id], references: [id], onDelete: Cascade)
}

model file_types {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(50)
  description String?   @db.VarChar(150)
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  files       files[]
}

model files {
  id                                  Int                                   @id @default(autoincrement())
  original_name                       String
  name                                String?
  description                         String?
  file_type_id                        Int
  url_file                            String
  has_disponibility                   Boolean                               @default(false)
  origin                              Int
  created_at                          DateTime                              @db.Timestamptz(6)
  updated_at                          DateTime                              @db.Timestamptz(6)
  deleted_at                          DateTime?                             @db.Timestamptz(6)
  size                                String?                               @db.VarChar(255)
  file_types                          file_types                            @relation(fields: [file_type_id], references: [id], onDelete: Cascade)
  access_center_documents             access_center_documents[]
  access_center_guests                access_center_guests[]
  announcement_documents              announcement_documents[]
  directory_documents                 directory_documents[]
  documents                           documents[]
  documents_company                   documents_company[]
  documents_condominium               documents_condominium[]
  documents_measurement               documents_measurement[]
  documents_release                   documents_release[]
  documents_syndic                    documents_syndic[]
  employee_attachments                employee_attachments[]
  employee_documents                  employee_documents[]
  employees                           employees[]
  extracts                            extracts[]
  package_documents                   package_documents[]
  packages_tracks                     packages_tracks[]
  profiles                            profiles[]
  survey_attachments                  survey_attachments[]
  surveys                             surveys[]
  unit_attachments                    unit_attachments[]
  unit_vehicles                       unit_vehicles[]
  virtual_area_documents              virtual_area_documents[]
  virtual_area_interdiction_documents virtual_area_interdiction_documents[]
  warning_center                      warning_center[]
}

model fractions {
  id                   Int                  @id @default(autoincrement())
  unit_id              Int
  percentage           Float
  created_at           DateTime             @db.Timestamptz(6)
  updated_at           DateTime             @db.Timestamptz(6)
  deleted_at           DateTime?            @db.Timestamptz(6)
  group_id             Int
  unit_group_fractions unit_group_fractions @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units                units                @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model group_condominium {
  id             Int          @id @default(autoincrement())
  group_id       Int
  condominium_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  can_edit       Boolean      @default(true)
  deleted_at     DateTime?    @db.Timestamptz(6)
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  groups         groups       @relation(fields: [group_id], references: [id], onDelete: Cascade)
}

model group_parking_relations {
  id            Int          @id @default(autoincrement())
  group_unit_id Int
  parking_id    Int
  created_at    DateTime     @db.Timestamptz(6)
  updated_at    DateTime     @db.Timestamptz(6)
  deleted_at    DateTime?    @db.Timestamptz(6)
  groups_units  groups_units @relation(fields: [group_unit_id], references: [id], onDelete: Cascade)
  parkings      parkings     @relation(fields: [parking_id], references: [id], onDelete: Cascade)

  @@unique([group_unit_id, parking_id])
}

model group_roles {
  id         Int       @id @default(autoincrement())
  id_group   Int
  id_role    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  standby    Boolean?
  groups     groups    @relation(fields: [id_group], references: [id], onDelete: Cascade)
  roles      roles     @relation(fields: [id_role], references: [id], onDelete: Cascade)
}

model group_time_restrictions {
  id           Int                              @id @default(autoincrement())
  day          enum_group_time_restrictions_day
  start_period Int
  end_period   Int
  group_id     Int
  created_at   DateTime                         @db.Timestamptz(6)
  updated_at   DateTime                         @db.Timestamptz(6)
  deleted_at   DateTime?                        @db.Timestamptz(6)
  standby      Boolean?                         @default(false)
  groups       groups                           @relation(fields: [group_id], references: [id], onDelete: Cascade)
}

model group_unit_relation {
  id            Int          @id @default(autoincrement())
  group_unit_id Int
  unit_id       Int?
  created_at    DateTime     @db.Timestamptz(6)
  updated_at    DateTime     @db.Timestamptz(6)
  deleted_at    DateTime?    @db.Timestamptz(6)
  parking_id    Int?
  groups_units  groups_units @relation(fields: [group_unit_id], references: [id], onDelete: Cascade)
  parkings      parkings?    @relation(fields: [parking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units         units?       @relation(fields: [unit_id], references: [id], onDelete: Cascade)

  @@unique([group_unit_id, parking_id], map: "group_unit_relation_unique_composite_parking")
  @@unique([group_unit_id, unit_id], map: "group_unit_relation_unique_composite_unit")
}

model groups {
  id                              Int                               @id @default(autoincrement())
  name                            String                            @db.VarChar(255)
  created_at                      DateTime                          @db.Timestamptz(6)
  updated_at                      DateTime                          @db.Timestamptz(6)
  deleted_at                      DateTime?                         @db.Timestamptz(6)
  condominium_id                  Int?
  company_id                      Int?
  to_specific_user                Boolean?                          @default(false)
  is_master                       Boolean                           @default(false)
  all_condominiums                Boolean                           @default(false)
  companies                       companies?                        @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                    condominiums?                     @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  directory_documents_share       directory_documents_share[]
  group_condominium               group_condominium[]
  group_roles                     group_roles[]
  group_time_restrictions         group_time_restrictions[]
  groups_restriction_bankaccounts groups_restriction_bankaccounts[]
  user_group                      user_group[]
}

model groups_restriction_bankaccounts {
  id             Int          @id @default(autoincrement())
  group_id       Int?
  bankaccount_id Int?
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  bankaccount    bankaccount? @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  groups         groups?      @relation(fields: [group_id], references: [id], onDelete: Cascade)
}

model groups_units {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  color                   String                    @db.VarChar(255)
  condominium_id          Int
  created_at              DateTime                  @db.Timestamptz(6)
  updated_at              DateTime                  @db.Timestamptz(6)
  deleted_at              DateTime?                 @db.Timestamptz(6)
  condominiums            condominiums              @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  group_parking_relations group_parking_relations[]
  group_unit_relation     group_unit_relation[]
}

model inadimplencys {
  id             Int           @id @default(autoincrement())
  value_original Float?
  due_date       DateTime?     @db.Timestamptz(6)
  competence     String?       @db.VarChar(255)
  complement     String?       @db.VarChar(255)
  account_type   String?       @db.VarChar(255)
  account_number BigInt?
  our_number     BigInt?
  created_at     DateTime      @db.Timestamptz(6)
  unit_id        Int?
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  condominium_id Int?
  release_id     Int?
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  releases       releases?     @relation(fields: [release_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units          units?        @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model interdiction_tags {
  tag                        String                       @id @db.VarChar(255)
  created_at                 DateTime?                    @db.Timestamptz(6)
  updated_at                 DateTime?                    @db.Timestamptz(6)
  virtual_area_interdictions virtual_area_interdictions[]
}

model inventory {
  id              Int            @id @default(autoincrement())
  name            String?        @db.VarChar(255)
  quantity        Int?
  virtual_area_id Int?
  created_at      DateTime       @db.Timestamptz(6)
  updated_at      DateTime       @db.Timestamptz(6)
  deleted_at      DateTime?      @db.Timestamptz(6)
  virtual_areas   virtual_areas? @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
}

model locate_citys {
  id            Int            @id @default(autoincrement())
  name          String         @unique @db.VarChar(255)
  state_id      Int?
  created_at    DateTime       @db.Timestamptz(6)
  updated_at    DateTime       @db.Timestamptz(6)
  deleted_at    DateTime?      @db.Timestamptz(6)
  locate_states locate_states? @relation(fields: [state_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model locate_states {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(255)
  created_at   DateTime       @db.Timestamptz(6)
  updated_at   DateTime       @db.Timestamptz(6)
  deleted_at   DateTime?      @db.Timestamptz(6)
  locate_citys locate_citys[]
}

model measure_units {
  id                  Int               @id @default(autoincrement())
  name                String            @db.VarChar(255)
  consumption_type_id Int
  created_at          DateTime          @db.Timestamptz(6)
  updated_at          DateTime          @db.Timestamptz(6)
  deleted_at          DateTime?         @db.Timestamptz(6)
  consumption_types   consumption_types @relation(fields: [consumption_type_id], references: [id], onDelete: Cascade)
}

model measurements {
  id                      Int                     @id @default(autoincrement())
  consumption             Float
  cost                    Decimal                 @db.Decimal
  variation               Int
  measure_date            DateTime                @db.Timestamptz(6)
  measure                 Float
  unit_id                 Int
  consumption_id          Int?
  created_at              DateTime                @db.Timestamptz(6)
  updated_at              DateTime                @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  pay                     Boolean?
  bill_collection_unit_id Int?
  bill_id                 Int?
  bills_collection_units  bills_collection_units? @relation(fields: [bill_collection_unit_id], references: [id])
  consumptions            consumptions?           @relation(fields: [consumption_id], references: [id], onDelete: Cascade)
  units                   units                   @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  documents_measurement   documents_measurement[]
}

model module_permissions {
  id          Int       @id @default(autoincrement())
  module_id   Int
  title       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  modules     modules   @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model modules {
  id                          Int                           @id @default(autoincrement())
  name                        String                        @db.VarChar(255)
  description                 String?                       @db.VarChar(255)
  created_at                  DateTime                      @db.Timestamptz(6)
  updated_at                  DateTime                      @db.Timestamptz(6)
  deleted_at                  DateTime?                     @db.Timestamptz(6)
  icon                        String?                       @db.VarChar(255)
  title                       String?                       @db.VarChar(255)
  parent_id                   Int?
  path_url                    String?                       @db.VarChar(255)
  order                       Int                           @default(0)
  modules                     modules?                      @relation("modulesTomodules", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  app_modules                 app_modules[]
  company_modules             company_modules[]
  condominium_modules         condominium_modules[]
  employee_module_permissions employee_module_permissions[]
  module_permissions          module_permissions[]
  other_modules               modules[]                     @relation("modulesTomodules")
  unit_restrictions           unit_restrictions[]
  virtual_area_module_configs virtual_area_module_configs[]
}

model monetary {
  id                                Int                           @id @default(autoincrement())
  due_date                          Int?
  interest_rate                     Decimal?                      @db.Decimal
  pro_rate                          Boolean?                      @default(false)
  penalty_rate                      Decimal?                      @db.Decimal
  calculate_with_value_default_rate Boolean?                      @default(false)
  honary_lawyer                     Decimal?                      @db.Decimal
  days_for_inadiplency              Int?
  process_att_monetary              Int?                          @default(0)
  index_monetary                    enum_monetary_index_monetary?
  created_at                        DateTime                      @db.Timestamptz(6)
  updated_at                        DateTime                      @db.Timestamptz(6)
  deleted_at                        DateTime?                     @db.Timestamptz(6)
  duplicate_rate                    Float?
  bankaccount_id                    Int
  default                           Boolean                       @default(false)
  duplicate_rate_active             Boolean?
  bankaccount                       bankaccount                   @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  companies                         companies[]
  condominiums                      condominiums[]
  monetary_rates                    monetary_rates[]
}

model monetary_correction {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  date        DateTime      @db.Timestamptz(6)
  index       Float
  created_at  DateTime      @db.Timestamptz(6)
  updated_at  DateTime      @db.Timestamptz(6)
  deleted_at  DateTime?     @db.Timestamptz(6)
  bankaccount bankaccount[]
}

model monetary_rates {
  id          Int                            @id @default(autoincrement())
  name        String                         @db.VarChar(255)
  rate        Decimal                        @db.Decimal
  monetary_id Int
  created_at  DateTime                       @db.Timestamptz(6)
  updated_at  DateTime                       @db.Timestamptz(6)
  deleted_at  DateTime?                      @db.Timestamptz(6)
  rate_type   enum_monetary_rates_rate_type?
  active      Boolean?
  monetary    monetary                       @relation(fields: [monetary_id], references: [id], onDelete: Cascade)
}

model month_consumptions {
  id                Int          @id @default(autoincrement())
  total_consumption Float
  total_cost        Decimal      @db.Decimal
  consumption_id    Int
  created_at        DateTime     @db.Timestamptz(6)
  updated_at        DateTime     @db.Timestamptz(6)
  deleted_at        DateTime?    @db.Timestamptz(6)
  consumptions      consumptions @relation(fields: [consumption_id], references: [id], onDelete: Cascade)
}

model notifications {
  id                Int                       @id @default(autoincrement())
  types             enum_notifications_types
  notification_days Int?
  condominium_id    Int?
  created_at        DateTime                  @db.Timestamptz(6)
  updated_at        DateTime                  @db.Timestamptz(6)
  deleted_at        DateTime?                 @db.Timestamptz(6)
  message           String?                   @default("Mensagem provisória") @db.VarChar(255)
  range             enum_notifications_range?
  bill_id           Int?
  company_id        Int?
  bills             bills?                    @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  companies         companies?                @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums      condominiums?             @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
}

model notifications_configuration {
  id                    Int                                                     @id @default(autoincrement())
  mean_of_communication enum_notifications_configuration_mean_of_communication?
  period                enum_notifications_configuration_period?
  days                  Int?
  message               String?
  condominium_id        Int
  created_at            DateTime                                                @db.Timestamptz(6)
  updated_at            DateTime                                                @db.Timestamptz(6)
  deleted_at            DateTime?                                               @db.Timestamptz(6)
  is_active             Boolean?
  condominiums          condominiums                                            @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  bill_notifications    bill_notifications[]
}

model owners_tenants {
  id         Int       @id(map: "owners_pkey") @default(autoincrement())
  unit_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  isowner    Boolean?
  user_id    Int?
  units      units     @relation(fields: [unit_id], references: [id], onDelete: Cascade, map: "owners_unit_id_fkey")
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model package_documents {
  id          Int       @id @default(autoincrement())
  file_id     Int
  package_id  Int
  has_problem Boolean   @default(false)
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  files       files     @relation(fields: [file_id], references: [id], onDelete: Cascade)
  packages    packages  @relation(fields: [package_id], references: [id], onDelete: Cascade)
}

model package_parcels {
  id              Int                       @id @default(autoincrement())
  package_id      Int
  tracking_number String?                   @db.VarChar(255)
  size            enum_package_parcels_size
  created_at      DateTime                  @db.Timestamptz(6)
  updated_at      DateTime                  @db.Timestamptz(6)
  deleted_at      DateTime?                 @db.Timestamptz(6)
  has_problem     Boolean?                  @default(false)
  invoice         String?                   @db.VarChar(255)
  packages        packages                  @relation(fields: [package_id], references: [id], onDelete: Cascade)
}

model package_problem_solutions {
  id             Int                                   @id @default(autoincrement())
  package_id     Int
  solved_user_id Int?
  unit_id        Int
  message        String                                @db.VarChar(255)
  status         enum_package_problem_solutions_status @default(pending)
  created_at     DateTime                              @db.Timestamptz(6)
  updated_at     DateTime                              @db.Timestamptz(6)
  deleted_at     DateTime?                             @db.Timestamptz(6)
  packages       packages                              @relation(fields: [package_id], references: [id], onDelete: Cascade)
  users          users?                                @relation(fields: [solved_user_id], references: [id])
  units          units                                 @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model packages {
  id                                                      Int                             @id @default(autoincrement())
  recipient_other_user                                    String?                         @db.VarChar(255)
  condominium_id                                          Int
  unit_id                                                 Int
  pickup_area_id                                          Int?
  pickup_note                                             String?                         @db.VarChar(255)
  carrier                                                 String?                         @db.VarChar(255)
  problem_type                                            enum_packages_problem_type?
  problem_description                                     String?                         @db.VarChar(255)
  created_at                                              DateTime                        @db.Timestamptz(6)
  updated_at                                              DateTime                        @db.Timestamptz(6)
  deleted_at                                              DateTime?                       @db.Timestamptz(6)
  internal_id                                             Int?
  received_profile_id                                     Int?
  recipient_profile_id                                    Int?
  problem_reported_profile_id                             Int?
  delivered_at                                            DateTime?                       @db.Timestamptz(6)
  withdrawal_profile_id                                   Int?
  condominiums                                            condominiums                    @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  virtual_areas                                           virtual_areas?                  @relation(fields: [pickup_area_id], references: [id])
  profiles_packages_problem_reported_profile_idToprofiles profiles?                       @relation("packages_problem_reported_profile_idToprofiles", fields: [problem_reported_profile_id], references: [id], onDelete: Cascade, onUpdate: SetNull)
  profiles_packages_received_profile_idToprofiles         profiles?                       @relation("packages_received_profile_idToprofiles", fields: [received_profile_id], references: [id], onDelete: Cascade, onUpdate: SetNull)
  profiles_packages_recipient_profile_idToprofiles        profiles?                       @relation("packages_recipient_profile_idToprofiles", fields: [recipient_profile_id], references: [id], onDelete: Cascade, onUpdate: SetNull)
  units                                                   units                           @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  package_documents                                       package_documents[]
  package_parcels                                         package_parcels[]
  package_problem_solutions                               package_problem_solutions[]
  packages_withdrawals_relation                           packages_withdrawals_relation[]
}

model packages_problem_notifications_settings {
  id                    Int                @id @default(autoincrement())
  settings_id           Int
  type                  String             @db.VarChar(255)
  recipient_position_id Int
  pending_days          Int?
  active                Boolean            @default(true)
  created_at            DateTime           @db.Timestamptz(6)
  updated_at            DateTime           @db.Timestamptz(6)
  deleted_at            DateTime?          @db.Timestamptz(6)
  business_positions    business_positions @relation(fields: [recipient_position_id], references: [id], onDelete: Cascade, map: "packages_problem_notifications_setti_recipient_position_id_fkey")
  packages_settings     packages_settings  @relation(fields: [settings_id], references: [id], onDelete: Cascade)
}

model packages_schedule_settings {
  id                Int                                 @id @default(autoincrement())
  settings_id       Int
  day               enum_packages_schedule_settings_day
  start_hour        String?                             @db.VarChar(255)
  end_hour          String?                             @db.VarChar(255)
  active            Boolean                             @default(true)
  created_at        DateTime                            @db.Timestamptz(6)
  updated_at        DateTime                            @db.Timestamptz(6)
  deleted_at        DateTime?                           @db.Timestamptz(6)
  virtual_area_id   Int
  packages_settings packages_settings                   @relation(fields: [settings_id], references: [id], onDelete: Cascade)
  virtual_areas     virtual_areas                       @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
}

model packages_settings {
  id                                      Int                                       @id @default(autoincrement())
  condominium_id                          Int
  delivery_mode                           enum_packages_settings_delivery_mode      @default(manual)
  pickup_notification                     Boolean?                                  @default(false)
  register_notification                   Boolean?                                  @default(false)
  register_minutes                        Int?
  problem_pending                         Boolean?                                  @default(false)
  problem_days                            Int?
  created_at                              DateTime                                  @db.Timestamptz(6)
  updated_at                              DateTime                                  @db.Timestamptz(6)
  deleted_at                              DateTime?                                 @db.Timestamptz(6)
  condominiums                            condominiums                              @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  packages_problem_notifications_settings packages_problem_notifications_settings[]
  packages_schedule_settings              packages_schedule_settings[]
}

model packages_tracks {
  id              Int                          @id @default(autoincrement())
  title           String                       @db.VarChar(255)
  tracking_number String                       @db.VarChar(255)
  status          enum_packages_tracks_status?
  carrier         String?                      @db.VarChar(255)
  file_id         Int?
  unit_id         Int
  created_at      DateTime                     @db.Timestamptz(6)
  updated_at      DateTime                     @db.Timestamptz(6)
  deleted_at      DateTime?                    @db.Timestamptz(6)
  files           files?                       @relation(fields: [file_id], references: [id])
  units           units                        @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model packages_withdrawals {
  id                            Int                                                 @id @default(autoincrement())
  code                          String?                                             @db.VarChar(255)
  withdrawal_other_name         String?                                             @db.VarChar(255)
  withdrawal_document_type      enum_packages_withdrawals_withdrawal_document_type?
  withdrawal_document           String?                                             @db.VarChar(255)
  delivered_at                  DateTime?                                           @db.Timestamptz(6)
  created_at                    DateTime                                            @db.Timestamptz(6)
  updated_at                    DateTime                                            @db.Timestamptz(6)
  deleted_at                    DateTime?                                           @db.Timestamptz(6)
  withdrawal_profile_id         Int?
  manual_justification          String?
  profiles                      profiles?                                           @relation(fields: [withdrawal_profile_id], references: [id], onDelete: Cascade)
  packages_withdrawals_relation packages_withdrawals_relation[]
}

model packages_withdrawals_relation {
  id                   Int                  @id @default(autoincrement())
  withdrawal_id        Int
  package_id           Int
  created_at           DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?            @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?            @db.Timestamptz(6)
  packages             packages             @relation(fields: [package_id], references: [id], onDelete: Cascade)
  packages_withdrawals packages_withdrawals @relation(fields: [withdrawal_id], references: [id], onDelete: Cascade)
}

model parking_owners {
  id         Int       @id @default(autoincrement())
  profile_id Int
  parking_id Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  parkings   parkings  @relation(fields: [parking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles   profiles  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model parkings {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  unit_id                 Int?
  created_at              DateTime                  @db.Timestamptz(6)
  updated_at              DateTime                  @db.Timestamptz(6)
  deleted_at              DateTime?                 @db.Timestamptz(6)
  block_id                Int?
  area                    Decimal?                  @db.Decimal(18, 2)
  abatement_percentage    Decimal?                  @db.Decimal(7, 4)
  ideal_fraction          Decimal?                  @db.Decimal(9, 8)
  type                    enum_parkings_type?
  blocks                  blocks?                   @relation(fields: [block_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units                   units?                    @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  access_center           access_center[]
  group_parking_relations group_parking_relations[]
  group_unit_relation     group_unit_relation[]
  parking_owners          parking_owners[]
  unit_parkings           unit_parkings[]

  @@unique([name, block_id], map: "parkings_unique_composite")
}

model patrimony {
  id             Int              @id @default(autoincrement())
  name           String?          @db.VarChar(255)
  description    String?
  amount         Int?
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  deleted_at     DateTime?        @db.Timestamptz(6)
  patrimony_item patrimony_item[]
  penalty        penalty[]
}

model patrimony_item {
  id               Int        @id @default(autoincrement())
  patrimony_id     Int?
  name             String?
  description      String?
  product_warranty DateTime?  @db.Timestamptz(6)
  value            Decimal?   @db.Decimal(10, 2)
  created_by       Int?
  created_at       DateTime   @db.Timestamptz(6)
  updated_at       DateTime   @db.Timestamptz(6)
  deleted_at       DateTime?  @db.Timestamptz(6)
  users            users?     @relation(fields: [created_by], references: [id], onDelete: Cascade)
  patrimony        patrimony? @relation(fields: [patrimony_id], references: [id], onDelete: Cascade)
}

model payment_method_types {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  created_at                DateTime                    @db.Timestamptz(6)
  updated_at                DateTime                    @db.Timestamptz(6)
  extract_releases          extract_releases[]
  payment_methods           payment_methods[]
  providers_payment_methods providers_payment_methods[]
}

model payment_methods {
  id                         Int                                @id @default(autoincrement())
  payment_method_id          Int
  comments                   String?
  notificate                 Boolean?
  bol_code                   String?                            @db.VarChar(255)
  transf_banking_institution String?                            @db.VarChar(255)
  transf_agency              String?                            @db.VarChar(255)
  transf_account             String?                            @db.VarChar(255)
  transf_owner_account       String?                            @db.VarChar(255)
  transf_cpf_cnpj            String?                            @db.VarChar(255)
  pix_key                    String?                            @db.VarChar(255)
  created_at                 DateTime                           @db.Timestamptz(6)
  updated_at                 DateTime                           @db.Timestamptz(6)
  pix_key_type               enum_payment_methods_pix_key_type?
  provider_id                Int?
  release_id                 Int?
  preferential               Boolean                            @default(false)
  operation                  String?                            @db.VarChar(255)
  transf_account_type        String?                            @db.VarChar(255)
  deleted_at                 DateTime?                          @db.Timestamptz(6)
  obs                        String?                            @db.VarChar(255)
  authorized_debit           Boolean?
  debt_uf                    String?                            @db.VarChar(255)
  debt_payment_type          String?                            @db.VarChar(255)
  debt_identification_number String?                            @db.VarChar(255)
  payment_method_types       payment_method_types               @relation(fields: [payment_method_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  providers                  providers?                         @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  releases                   releases?                          @relation(fields: [release_id], references: [id], onDelete: Cascade)
}

model payment_slips {
  id                             Int       @id @default(autoincrement())
  banco                          String?   @db.VarChar(255)
  description                    String?
  data_emissao                   DateTime? @db.Timestamptz(6)
  data_vencimento                DateTime? @db.Timestamptz(6)
  valor                          BigInt?
  nosso_numero                   String?   @db.VarChar(255)
  numero_documento               String?   @db.VarChar(255)
  instrucoes                     String?   @db.VarChar(255)
  pagador                        String?   @db.VarChar(255)
  pagador_cpf_cnpj               String?   @db.VarChar(255)
  pagador_endereco_rua_num       String?   @db.VarChar(255)
  pagador_endereco_bairro        String?   @db.VarChar(255)
  pagador_endereco_cep           String?   @db.VarChar(255)
  pagador_endereco_cidade_estado String?   @db.VarChar(255)
  pagador_outras_informacoes     String?   @db.VarChar(255)
  cedente                        String?   @db.VarChar(255)
  cedente_cnpj                   String?   @db.VarChar(255)
  cedente_endereco_rua_num       String?   @db.VarChar(255)
  cedente_endereco_bairro        String?   @db.VarChar(255)
  cedente_endereco_cep           String?   @db.VarChar(255)
  cedente_endereco_cidade_estado String?   @db.VarChar(255)
  agencia                        String?   @db.VarChar(255)
  codigo_cedente                 String?   @db.VarChar(255)
  carteira                       String?   @db.VarChar(255)
  created_by                     Int?
  created_at                     DateTime  @db.Timestamptz(6)
  updated_at                     DateTime  @db.Timestamptz(6)
  deleted_at                     DateTime? @db.Timestamptz(6)
  users                          users?    @relation(fields: [created_by], references: [id], onDelete: Cascade)
}

model penalty {
  id               Int        @id @default(autoincrement())
  patrimony_id     Int?
  name             String?
  description      String?
  product_warranty DateTime?  @db.Timestamptz(6)
  value            Decimal?   @db.Decimal(10, 2)
  created_by       Int?
  created_at       DateTime   @db.Timestamptz(6)
  updated_at       DateTime   @db.Timestamptz(6)
  deleted_at       DateTime?  @db.Timestamptz(6)
  users            users?     @relation(fields: [created_by], references: [id], onDelete: Cascade)
  patrimony        patrimony? @relation(fields: [patrimony_id], references: [id], onDelete: Cascade)
}

model plan_account_categories {
  id                                                                                          Int                                          @id @default(autoincrement())
  order                                                                                       Int
  name                                                                                        String                                       @db.VarChar(255)
  have_children                                                                               Boolean                                      @default(false)
  parent                                                                                      Int?
  created_at                                                                                  DateTime                                     @db.Timestamptz(6)
  updated_at                                                                                  DateTime                                     @db.Timestamptz(6)
  deleted_at                                                                                  DateTime?                                    @db.Timestamptz(6)
  plan_account_id                                                                             Int?
  allow_childrens                                                                             Boolean                                      @default(true)
  active                                                                                      Boolean                                      @default(true)
  block_childrens                                                                             Boolean                                      @default(false)
  super_parent                                                                                Int?
  expense                                                                                     Boolean?
  uuid                                                                                        String                                       @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  plan_account_categories_plan_account_categoriesToplan_account_categories_parent             plan_account_categories?                     @relation("plan_account_categoriesToplan_account_categories_parent", fields: [parent], references: [id], onDelete: Cascade)
  plan_accounts                                                                               plan_accounts?                               @relation(fields: [plan_account_id], references: [id], onDelete: Cascade)
  plan_account_categories_plan_account_categoriesToplan_account_categories_super_parent       plan_account_categories?                     @relation("plan_account_categoriesToplan_account_categories_super_parent", fields: [super_parent], references: [id], onDelete: Cascade)
  bill_complements                                                                            bill_complements[]
  billing_items                                                                               billing_items[]
  bills_collection                                                                            bills_collection[]
  consumptions                                                                                consumptions[]
  other_plan_account_categories_plan_account_categoriesToplan_account_categories_parent       plan_account_categories[]                    @relation("plan_account_categoriesToplan_account_categories_parent")
  other_plan_account_categories_plan_account_categoriesToplan_account_categories_super_parent plan_account_categories[]                    @relation("plan_account_categoriesToplan_account_categories_super_parent")
  provider_commentaries                                                                       provider_commentaries[]
  providers_plan_account_categories_relation                                                  providers_plan_account_categories_relation[]
  releases                                                                                    releases[]
  remittance_configs                                                                          remittance_configs[]
  virtual_areas                                                                               virtual_areas[]
}

model plan_accounts {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  company_id              Int?
  created_at              DateTime                  @db.Timestamptz(6)
  updated_at              DateTime                  @db.Timestamptz(6)
  deleted_at              DateTime?                 @db.Timestamptz(6)
  used                    Boolean                   @default(false)
  companies               companies?                @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums            condominiums[]
  plan_account_categories plan_account_categories[]
}

model profile_emails {
  id         Int       @id @default(autoincrement())
  profile_id Int
  email      String    @db.VarChar(255)
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  profiles   profiles  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model profile_phones {
  id         Int       @id @default(autoincrement())
  profile_id Int
  phone      String    @db.VarChar(255)
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  profiles   profiles  @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model profiles {
  id                                                      Int                    @id @default(autoincrement())
  name                                                    String                 @db.VarChar(255)
  username                                                String?                @db.VarChar(255)
  birthday                                                DateTime?              @db.Timestamptz(6)
  gender                                                  String?                @db.VarChar(255)
  cpf_cnpj                                                String?                @db.VarChar(255)
  rg                                                      String?                @db.VarChar(255)
  avatar_id                                               Int?
  contact_id                                              Int?
  created_at                                              DateTime               @db.Timestamptz(6)
  updated_at                                              DateTime               @db.Timestamptz(6)
  deleted_at                                              DateTime?              @db.Timestamptz(6)
  last_access_at                                          DateTime?              @db.Timestamptz(6)
  user_id                                                 Int?
  external_id                                             String?                @db.Uuid
  files                                                   files?                 @relation(fields: [avatar_id], references: [id])
  contacts                                                contacts?              @relation(fields: [contact_id], references: [id])
  users_profiles_user_idTousers                           users?                 @relation("profiles_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  access_center_access_center_created_byToprofiles        access_center[]        @relation("access_center_created_byToprofiles")
  access_center_access_center_updated_byToprofiles        access_center[]        @relation("access_center_updated_byToprofiles")
  addresses                                               addresses[]
  employees                                               employees[]
  packages_packages_problem_reported_profile_idToprofiles packages[]             @relation("packages_problem_reported_profile_idToprofiles")
  packages_packages_received_profile_idToprofiles         packages[]             @relation("packages_received_profile_idToprofiles")
  packages_packages_recipient_profile_idToprofiles        packages[]             @relation("packages_recipient_profile_idToprofiles")
  packages_withdrawals                                    packages_withdrawals[]
  parking_owners                                          parking_owners[]
  profile_emails                                          profile_emails[]
  profile_phones                                          profile_phones[]
  reserve_actions_log                                     reserve_actions_log[]
  survey_comments                                         survey_comments[]
  survey_submissions                                      survey_submissions[]
  surveys_profilesTosurveys_created_by                    surveys[]              @relation("profilesTosurveys_created_by")
  surveys_profilesTosurveys_updated_by                    surveys[]              @relation("profilesTosurveys_updated_by")
  unit_owners                                             unit_owners[]
  unit_residents                                          unit_residents[]
  unit_tenants                                            unit_tenants[]
  users_profilesTousers_profile_id                        users[]                @relation("profilesTousers_profile_id")
  warning_center                                          warning_center[]
}

model provider_commentaries {
  id                       Int                     @id @default(autoincrement())
  description              String
  provider_id              Int
  user_id                  Int
  plan_account_category_id Int
  created_at               DateTime                @db.Timestamptz(6)
  updated_at               DateTime                @db.Timestamptz(6)
  deleted_at               DateTime?               @db.Timestamptz(6)
  plan_account_categories  plan_account_categories @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
  providers                providers               @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  users                    users                   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model provider_contacts {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  email       String?   @db.VarChar(255)
  cellphone   BigInt?
  provider_id Int
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  providers   providers @relation(fields: [provider_id], references: [id], onDelete: Cascade)
}

model provider_ratings {
  id          Int                                @id @default(autoincrement())
  value       Float
  user_id     Int?
  provider_id Int?
  created_at  DateTime                           @db.Timestamptz(6)
  updated_at  DateTime                           @db.Timestamptz(6)
  deleted_at  DateTime?                          @db.Timestamptz(6)
  author_type enum_provider_ratings_author_type?
  providers   providers?                         @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  users       users?                             @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model provider_steps {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  done        Boolean?   @default(false)
  provider_id Int?
  created_at  DateTime   @db.Timestamptz(6)
  updated_at  DateTime   @db.Timestamptz(6)
  deleted_at  DateTime?  @db.Timestamptz(6)
  providers   providers? @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model providers {
  id                                         Int                                          @id @default(autoincrement())
  created_at                                 DateTime                                     @db.Timestamptz(6)
  updated_at                                 DateTime                                     @db.Timestamptz(6)
  deleted_at                                 DateTime?                                    @db.Timestamptz(6)
  cep                                        Int?
  address                                    String?                                      @db.VarChar(255)
  complement                                 String?
  neighborhood                               String?                                      @db.VarChar(255)
  city                                       String?                                      @db.VarChar(255)
  state                                      String?                                      @db.VarChar(255)
  inss                                       BigInt?
  ie                                         String?                                      @db.VarChar(255)
  im                                         String?                                      @db.VarChar(255)
  responsible                                String?                                      @db.VarChar(255)
  email                                      String?                                      @db.VarChar(255)
  phone                                      BigInt?
  cnae                                       String[]                                     @db.VarChar(255)
  tax_classification                         String?                                      @db.VarChar(255)
  legal_services                             String?                                      @db.VarChar(255)
  legal_nature                               String?                                      @db.VarChar(255)
  active                                     Boolean?
  provider_owner_id                          Int
  condominium_id                             Int?
  company_id                                 Int?
  uuid                                       String                                       @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  classification                             String?                                      @db.VarChar(255)
  category                                   String?                                      @db.VarChar(255)
  residency_number                           String?                                      @db.VarChar(255)
  companies                                  companies?                                   @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                               condominiums?                                @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  providers_owners                           providers_owners                             @relation(fields: [provider_owner_id], references: [id], onDelete: Cascade)
  accounts_payable                           accounts_payable[]
  bankaccount                                bankaccount[]
  payment_methods                            payment_methods[]
  provider_commentaries                      provider_commentaries[]
  provider_contacts                          provider_contacts[]
  provider_ratings                           provider_ratings[]
  provider_steps                             provider_steps[]
  providers_payment_methods                  providers_payment_methods[]
  providers_plan_account_categories_relation providers_plan_account_categories_relation[]
  providers_taxes_relation                   providers_taxes_relation[]
  releases                                   releases[]
}

model providers_owners {
  id           Int         @id @default(autoincrement())
  cnpj_cpf     String      @db.VarChar(255)
  name         String      @db.VarChar(255)
  fantasy_name String      @db.VarChar(255)
  created_at   DateTime    @db.Timestamptz(6)
  updated_at   DateTime    @db.Timestamptz(6)
  deleted_at   DateTime?   @db.Timestamptz(6)
  providers    providers[]
}

model providers_payment_methods {
  id                   Int                  @id @default(autoincrement())
  provider_id          Int?
  created_at           DateTime             @db.Timestamptz(6)
  updated_at           DateTime             @db.Timestamptz(6)
  deleted_at           DateTime?            @db.Timestamptz(6)
  payment_method       Int
  code_check_          String?              @map("code_check ") @db.VarChar(255)
  payment_method_types payment_method_types @relation(fields: [payment_method], references: [id], onDelete: Cascade)
  providers            providers?           @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model providers_plan_account_categories_relation {
  id                       Int                     @id @default(autoincrement())
  provider_id              Int
  plan_account_category_id Int
  created_at               DateTime                @db.Timestamptz(6)
  updated_at               DateTime                @db.Timestamptz(6)
  deleted_at               DateTime?               @db.Timestamptz(6)
  plan_account_categories  plan_account_categories @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade, map: "providers_plan_account_categories_plan_account_category_id_fkey")
  providers                providers               @relation(fields: [provider_id], references: [id], onDelete: Cascade)
}

model providers_taxes_relation {
  id          Int       @id @default(autoincrement())
  provider_id Int
  tax_id      Int
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  aliquot     Float
  providers   providers @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  taxes       taxes     @relation(fields: [tax_id], references: [id], onDelete: Cascade)
}

model receipt_bills {
  id         Int       @id @default(autoincrement())
  url        String    @db.VarChar(255)
  bill_id    Int?
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  bills      bills?    @relation(fields: [bill_id], references: [id], onDelete: Cascade)
}

model releases {
  id                                               Int                         @id @default(autoincrement())
  type                                             enum_releases_type
  due_date                                         DateTime?                   @db.Timestamptz(6)
  payment_date                                     DateTime?                   @db.Timestamptz(6)
  value                                            Decimal                     @db.Decimal(10, 2)
  expense                                          Boolean?
  complement                                       String?
  note_fiscal                                      BigInt?
  competency                                       String?                     @db.VarChar(255)
  check                                            String?                     @db.VarChar(255)
  portion_to_pay                                   Int?
  portion                                          Int?
  recurrent                                        String?                     @db.VarChar(255)
  paid                                             Boolean?
  bankaccount_id                                   Int
  plan_account_category_id                         Int?
  cost_center_id                                   Int?
  provider_id                                      Int?
  created_at                                       DateTime                    @db.Timestamptz(6)
  updated_at                                       DateTime                    @db.Timestamptz(6)
  deleted_at                                       DateTime?                   @db.Timestamptz(6)
  bank_transf_id                                   Int?
  render                                           Boolean                     @default(false)
  condominium_id                                   Int?
  unit_id                                          Int?
  paid_value                                       Float?
  bill_id                                          Int?
  competence_date                                  DateTime?                   @db.Timestamptz(6)
  bankaccount_bankaccountToreleases_bank_transf_id bankaccount?                @relation("bankaccountToreleases_bank_transf_id", fields: [bank_transf_id], references: [id], onDelete: Cascade)
  bankaccount_bankaccountToreleases_bankaccount_id bankaccount                 @relation("bankaccountToreleases_bankaccount_id", fields: [bankaccount_id], references: [id], onDelete: Cascade)
  bills_billsToreleases_bill_id                    bills?                      @relation("billsToreleases_bill_id", fields: [bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums                                     condominiums?               @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  cost_centers                                     cost_centers?               @relation(fields: [cost_center_id], references: [id], onDelete: Cascade)
  plan_account_categories                          plan_account_categories?    @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
  providers                                        providers?                  @relation(fields: [provider_id], references: [id], onDelete: Cascade)
  units                                            units?                      @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  billings                                         billings[]
  bills_bills_releases_idToreleases                bills[]                     @relation("bills_releases_idToreleases")
  bills_collection                                 bills_collection[]
  documents_release                                documents_release[]
  extract_releases_relation                        extract_releases_relation[]
  extract_releases                                 extract_releases[]
  inadimplencys                                    inadimplencys[]
  payment_methods                                  payment_methods[]
}

model remittance_configs {
  id                          Int                                       @id @default(autoincrement())
  receive_bills_via_dual_bank Boolean?
  cnab                        String?                                   @db.VarChar(255)
  agreement_surplus           String?                                   @db.VarChar(255)
  wallet_variation            String?                                   @db.VarChar(255)
  field_doc_species           String?                                   @db.VarChar(255)
  wallet_type                 String?                                   @db.VarChar(255)
  bill_postage_via_bank       Boolean?
  allow_discount              Boolean?
  discount_type               enum_remittance_configs_discount_type?
  discount_value              Float?
  discount_policy             String?                                   @db.VarChar(255)
  days_to_discount            Int?
  days_to_protest             Int?
  protest_day_type            enum_remittance_configs_protest_day_type?
  days_available_duplicate    Int?
  bankaccount_id              Int
  plan_account_category_id    Int?
  created_at                  DateTime                                  @db.Timestamptz(6)
  updated_at                  DateTime                                  @db.Timestamptz(6)
  deleted_at                  DateTime?                                 @db.Timestamptz(6)
  bankaccount                 bankaccount                               @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  plan_account_categories     plan_account_categories?                  @relation(fields: [plan_account_category_id], references: [id], onDelete: Cascade)
}

model remittance_status {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  created_at  DateTime      @db.Timestamptz(6)
  updated_at  DateTime      @db.Timestamptz(6)
  deleted_at  DateTime?     @db.Timestamptz(6)
  remittances remittances[]
}

model remittances {
  id                   Int               @id @default(autoincrement())
  company_id           Int?
  condominium_id       Int?
  bankaccount_id       Int
  remittance_status_id Int
  created_at           DateTime          @db.Timestamptz(6)
  updated_at           DateTime          @db.Timestamptz(6)
  deleted_at           DateTime?         @db.Timestamptz(6)
  url                  String?           @unique @db.VarChar(255)
  file_name            String?           @db.VarChar(255)
  bankaccount          bankaccount       @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  companies            companies?        @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums         condominiums?     @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  remittance_status    remittance_status @relation(fields: [remittance_status_id], references: [id], onDelete: Cascade)
  bills                bills[]
}

model report_selection_relations {
  id                     Int                                               @id @default(autoincrement())
  url                    String?                                           @db.VarChar(255)
  reference_period_value Int?
  reference_period       enum_report_selection_relations_reference_period?
  order                  Int?
  report_id              Int
  report_selection_id    Int
  created_at             DateTime                                          @db.Timestamptz(6)
  updated_at             DateTime                                          @db.Timestamptz(6)
  deleted_at             DateTime?                                         @db.Timestamptz(6)
  reports                reports                                           @relation(fields: [report_id], references: [id], onDelete: Cascade)
  report_selections      report_selections                                 @relation(fields: [report_selection_id], references: [id], onDelete: Cascade)
}

model report_selections {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  favorite                   Boolean                      @default(false)
  condominium_id             Int?
  company_id                 Int?
  created_at                 DateTime                     @db.Timestamptz(6)
  updated_at                 DateTime                     @db.Timestamptz(6)
  deleted_at                 DateTime?                    @db.Timestamptz(6)
  companies                  companies?                   @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums               condominiums?                @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  report_selection_relations report_selection_relations[]
}

model reports {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  created_at                 DateTime                     @db.Timestamptz(6)
  updated_at                 DateTime                     @db.Timestamptz(6)
  deleted_at                 DateTime?                    @db.Timestamptz(6)
  type                       String                       @db.VarChar(255)
  show_in                    enum_reports_show_in?        @default(both)
  has_field                  String?                      @db.VarChar(255)
  date_of_competence         DateTime?                    @db.Timestamptz(6)
  last_generated_at          DateTime?                    @db.Timestamptz(6)
  signed_report              String?
  is_copy                    Boolean?
  show_download_modal        Boolean                      @default(true)
  favorite_reports           favorite_reports[]
  report_associations        report_associations[]
  report_items               report_items[]
  report_selection_relations report_selection_relations[]
}

model reserve_queues {
  id              Int           @id @default(autoincrement())
  date            DateTime      @db.Timestamptz(6)
  virtual_area_id Int
  created_at      DateTime      @db.Timestamptz(6)
  updated_at      DateTime      @db.Timestamptz(6)
  deleted_at      DateTime?     @db.Timestamptz(6)
  end_date        DateTime?     @db.Timestamptz(6)
  virtual_areas   virtual_areas @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
  reserves        reserves[]
}

model reserves {
  id                      Int                     @id @default(autoincrement())
  status_use              Boolean?
  status_preuse           Boolean?
  status_aproove          Boolean?
  user_aproove            Boolean
  canceled                Boolean
  unit_id                 Int
  reserve_queue_id        Int
  guests                  String[]                @db.VarChar(255)
  created_at              DateTime                @db.Timestamptz(6)
  updated_at              DateTime                @db.Timestamptz(6)
  deleted_at              DateTime?               @db.Timestamptz(6)
  bill_id                 Int?
  bill_collection_unit_id Int?
  is_paid                 Boolean?                @default(false)
  rejection_reason        String?                 @db.VarChar(255)
  is_free                 Boolean                 @default(false)
  payment_status          String                  @default("FREE") @db.VarChar(255)
  uuid                    String?                 @unique @db.Uuid
  bills_collection_units  bills_collection_units? @relation(fields: [bill_collection_unit_id], references: [id], onDelete: Cascade)
  bills                   bills?                  @relation(fields: [bill_id], references: [id])
  reserve_queues          reserve_queues          @relation(fields: [reserve_queue_id], references: [id], onDelete: Cascade)
  units                   units                   @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  access_center           access_center[]
  reserve_actions_log     reserve_actions_log[]
  reserve_guests          reserves_guests[]
}

model residents_payment_methods {
  payment_method String          @id @db.VarChar(255)
  virtual_areas  virtual_areas[]
}

model return_file_bills {
  id             Int          @id @default(autoincrement())
  bill_id        Int
  return_file_id Int
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  bills          bills        @relation(fields: [bill_id], references: [id], onDelete: Cascade)
  return_files   return_files @relation(fields: [return_file_id], references: [id], onDelete: Cascade)
}

model return_files {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  url               String              @db.VarChar(255)
  duplicated        Int?
  not_found         Int?
  bankaccount_id    Int
  company_id        Int?
  condominium_id    Int?
  created_at        DateTime            @db.Timestamptz(6)
  updated_at        DateTime            @db.Timestamptz(6)
  deleted_at        DateTime?           @db.Timestamptz(6)
  bankaccount       bankaccount         @relation(fields: [bankaccount_id], references: [id], onDelete: Cascade)
  companies         companies?          @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums      condominiums?       @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  return_file_bills return_file_bills[]
}

model roles {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  created_at  DateTime      @db.Timestamptz(6)
  updated_at  DateTime      @db.Timestamptz(6)
  deleted_at  DateTime?     @db.Timestamptz(6)
  group_roles group_roles[]
}

model shared_documents {
  id                          Int                           @id @default(autoincrement())
  share_id                    Int
  directory_document_id       Int
  token                       String                        @unique @db.VarChar(255)
  created_at                  DateTime                      @db.Timestamptz(6)
  updated_at                  DateTime                      @db.Timestamptz(6)
  deleted_at                  DateTime?                     @db.Timestamptz(6)
  directory_documents         directory_documents           @relation(fields: [directory_document_id], references: [id], onDelete: Cascade)
  shares                      shares                        @relation(fields: [share_id], references: [id], onDelete: Cascade)
  shared_documents_recipients shared_documents_recipients[]
}

model shared_documents_recipients {
  id                  Int               @id @default(autoincrement())
  access              Boolean?
  shared_document_id  Int
  shared_recipient_id Int
  created_at          DateTime          @db.Timestamptz(6)
  updated_at          DateTime          @db.Timestamptz(6)
  deleted_at          DateTime?         @db.Timestamptz(6)
  shared_documents    shared_documents  @relation(fields: [shared_document_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  shared_recipients   shared_recipients @relation(fields: [shared_recipient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model shared_recipients {
  id                          Int                                            @id @default(autoincrement())
  share_id                    Int
  channel                     enum_shared_recipients_channel
  channel_identifier_type     enum_shared_recipients_channel_identifier_type
  identifier_value            String?                                        @db.VarChar(255)
  access                      Boolean?                                       @default(true)
  permission                  enum_shared_recipients_permission?             @default(view)
  created_at                  DateTime                                       @db.Timestamptz(6)
  updated_at                  DateTime                                       @db.Timestamptz(6)
  deleted_at                  DateTime?                                      @db.Timestamptz(6)
  shares                      shares                                         @relation(fields: [share_id], references: [id], onDelete: Cascade)
  shared_documents_recipients shared_documents_recipients[]
}

model shares {
  id                Int                 @id @default(autoincrement())
  user_id           Int
  token             String              @unique @db.VarChar(255)
  password_hash     String?             @db.VarChar(255)
  created_at        DateTime            @db.Timestamptz(6)
  updated_at        DateTime            @db.Timestamptz(6)
  deleted_at        DateTime?           @db.Timestamptz(6)
  condominium_id    Int?
  company_id        Int?
  companies         companies?          @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums      condominiums?       @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  shared_documents  shared_documents[]
  shared_recipients shared_recipients[]
}

model shopping {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
}

model states {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(255)
  initials   String?   @db.VarChar(255)
  country_id Int
  countries  countries @relation(fields: [country_id], references: [id], onDelete: Cascade)
  cities     cities[]
}

model syndics {
  id                Int                @id @default(autoincrement())
  name              String?            @db.VarChar(255)
  date_of_birth     DateTime?          @db.Timestamptz(6)
  rg                String?            @db.VarChar(255)
  cellphone         BigInt?
  phone             BigInt?
  email             String?            @db.VarChar(255)
  cpf               String?            @db.VarChar(255)
  beginning_mandate DateTime?          @db.Timestamptz(6)
  end_mandate       DateTime?          @db.Timestamptz(6)
  condominium_id    Int?
  created_at        DateTime           @db.Timestamptz(6)
  updated_at        DateTime           @db.Timestamptz(6)
  deleted_at        DateTime?          @db.Timestamptz(6)
  condominiums      condominiums?      @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  documents_syndic  documents_syndic[]
}

model taxes {
  id                       Int                        @id @default(autoincrement())
  name                     String?                    @db.VarChar(255)
  aliquot                  Float?
  created_at               DateTime                   @db.Timestamptz(6)
  updated_at               DateTime                   @db.Timestamptz(6)
  deleted_at               DateTime?                  @db.Timestamptz(6)
  providers_taxes_relation providers_taxes_relation[]
}

model unit_attachment_types {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  condominium_id   Int
  created_at       DateTime?          @db.Timestamptz(6)
  updated_at       DateTime?          @db.Timestamptz(6)
  deleted_at       DateTime?          @db.Timestamptz(6)
  condominiums     condominiums       @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  unit_attachments unit_attachments[]
}

model unit_attachments {
  id                      Int                   @id @default(autoincrement())
  name                    String                @db.VarChar(255)
  unit_id                 Int
  file_id                 Int
  unit_attachment_type_id Int
  created_at              DateTime?             @db.Timestamptz(6)
  updated_at              DateTime?             @db.Timestamptz(6)
  deleted_at              DateTime?             @db.Timestamptz(6)
  files                   files                 @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  unit_attachment_types   unit_attachment_types @relation(fields: [unit_attachment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units                   units                 @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model unit_comments {
  id         Int       @id @default(autoincrement())
  content    String    @db.VarChar(255)
  user_id    Int
  unit_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  units      units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model unit_group_fractions {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(255)
  condominium_id Int?
  created_at     DateTime      @db.Timestamptz(6)
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  fractions      fractions[]
}

model unit_group_values {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(255)
  condominium_id Int?
  created_at     DateTime      @db.Timestamptz(6)
  updated_at     DateTime      @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  unit_values    unit_values[]
}

model unit_owners {
  id                    Int       @id @default(autoincrement())
  unit_id               Int
  profile_id            Int
  contact_id            Int?
  created_at            DateTime  @db.Timestamptz(6)
  updated_at            DateTime  @db.Timestamptz(6)
  deleted_at            DateTime? @db.Timestamptz(6)
  financial_responsible Boolean?
  legal_representative  Boolean?  @default(false)
  contacts              contacts? @relation(fields: [contact_id], references: [id])
  profiles              profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  units                 units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_parkings {
  id         Int       @id @default(autoincrement())
  unit_id    Int
  parking_id Int
  deleted_at DateTime? @db.Timestamptz(6)
  parkings   parkings  @relation(fields: [parking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units      units     @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model unit_pets {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  color      String    @db.VarChar(255)
  species    String    @db.VarChar(255)
  breed      String    @db.VarChar(255)
  unit_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  units      units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_residents {
  id                   Int       @id @default(autoincrement())
  unit_id              Int
  created_at           DateTime  @db.Timestamptz(6)
  updated_at           DateTime  @db.Timestamptz(6)
  deleted_at           DateTime? @db.Timestamptz(6)
  profile_id           Int
  contact_id           Int?
  legal_representative Boolean?  @default(false)
  contacts             contacts? @relation(fields: [contact_id], references: [id])
  profiles             profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  units                units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_restrictions {
  id          Int       @id @default(autoincrement())
  unit_id     Int
  module_id   Int
  description String?   @db.VarChar(255)
  created_at  DateTime  @db.Timestamptz(6)
  updated_at  DateTime  @db.Timestamptz(6)
  deleted_at  DateTime? @db.Timestamptz(6)
  modules     modules   @relation(fields: [module_id], references: [id], onDelete: Cascade)
  units       units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_tenants {
  id                   Int       @id @default(autoincrement())
  unit_id              Int
  profile_id           Int
  contact_id           Int?
  created_at           DateTime  @db.Timestamptz(6)
  updated_at           DateTime  @db.Timestamptz(6)
  deleted_at           DateTime? @db.Timestamptz(6)
  legal_representative Boolean?  @default(false)
  contacts             contacts? @relation(fields: [contact_id], references: [id])
  profiles             profiles  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  units                units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_tenements {
  id                       Int       @id @default(autoincrement())
  cnpj                     String?   @db.VarChar(255)
  full_name                String?   @db.VarChar(255)
  responsible              String?   @db.VarChar(255)
  phone                    BigInt?
  cellphone                BigInt?
  email                    String?   @db.VarChar(255)
  cep                      BigInt?
  address                  String?   @db.VarChar(255)
  number                   Int?
  complement               String?   @db.VarChar(255)
  neighborhood             String?   @db.VarChar(255)
  city                     String?   @db.VarChar(255)
  state                    String?   @db.VarChar(255)
  send_copy_of_paymentslip Boolean   @default(false)
  send_emails_with_copy    Boolean   @default(false)
  unit_id                  Int
  created_at               DateTime  @db.Timestamptz(6)
  updated_at               DateTime  @db.Timestamptz(6)
  deleted_at               DateTime? @db.Timestamptz(6)
  units                    units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_values {
  id                Int               @id @default(autoincrement())
  value             Decimal           @db.Decimal(10, 2)
  group_id          Int
  unit_id           Int
  created_at        DateTime          @db.Timestamptz(6)
  updated_at        DateTime          @db.Timestamptz(6)
  deleted_at        DateTime?         @db.Timestamptz(6)
  unit_group_values unit_group_values @relation(fields: [group_id], references: [id], onDelete: Cascade)
  units             units             @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model unit_vehicles {
  id            Int       @id @default(autoincrement())
  type          String    @db.VarChar(255)
  color         String    @db.VarChar(255)
  license_plate String    @db.VarChar(255)
  model         String    @db.VarChar(255)
  unit_id       Int
  created_at    DateTime  @db.Timestamptz(6)
  updated_at    DateTime  @db.Timestamptz(6)
  deleted_at    DateTime? @db.Timestamptz(6)
  file_id       Int?
  files         files?    @relation(fields: [file_id], references: [id])
  units         units     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
}

model units {
  id                        Int                         @id @default(autoincrement())
  name                      String                      @db.VarChar(255)
  block_id                  Int?
  created_at                DateTime                    @db.Timestamptz(6)
  updated_at                DateTime                    @db.Timestamptz(6)
  deleted_at                DateTime?                   @db.Timestamptz(6)
  area                      Float?
  abatimento                Float?
  vencimento                Int?
  observacoes               String?
  fraction                  Float?
  condominium_id            Int
  cep                       Int?
  alternative_address       String?                     @db.VarChar(255)
  number                    Int?
  complement                String?                     @db.VarChar(255)
  neighborhood              String?                     @db.VarChar(255)
  city                      String?                     @db.VarChar(255)
  state                     String?                     @db.VarChar(255)
  property                  enum_units_property?
  uuid                      String                      @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  blocks                    blocks?                     @relation(fields: [block_id], references: [id], onDelete: Cascade)
  condominiums              condominiums                @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  access_center             access_center[]
  apportionment_fractions   apportionment_fractions[]
  apportionment_values      apportionment_values[]
  billings                  billings[]
  bills                     bills[]
  bills_collection_units    bills_collection_units[]
  fractions                 fractions[]
  group_unit_relation       group_unit_relation[]
  inadimplencys             inadimplencys[]
  measurements              measurements[]
  owners_tenants            owners_tenants[]
  package_problem_solutions package_problem_solutions[]
  packages                  packages[]
  packages_tracks           packages_tracks[]
  parkings                  parkings[]
  releases                  releases[]
  reserve_actions_log       reserve_actions_log[]
  reserves                  reserves[]
  unit_attachments          unit_attachments[]
  unit_comments             unit_comments[]
  unit_owners               unit_owners[]
  unit_parkings             unit_parkings[]
  unit_pets                 unit_pets[]
  unit_residents            unit_residents[]
  unit_restrictions         unit_restrictions[]
  unit_tenants              unit_tenants[]
  unit_tenements            unit_tenements[]
  unit_values               unit_values[]
  unit_vehicles             unit_vehicles[]

  @@unique([name, block_id, condominium_id], map: "unique_columns_name_block_units")
}

model user_access_company {
  id         Int       @id @default(autoincrement())
  is_manager Boolean   @default(false)
  user_id    Int
  company_id Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model user_access_history {
  id         Int       @id @default(autoincrement())
  user_id    Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_contact {
  id                      Int       @id @default(autoincrement())
  user_id                 Int
  gender                  String?   @db.VarChar(255)
  telephone               String?   @db.VarChar(255)
  cellphone               String?   @db.VarChar(255)
  address                 String?   @db.VarChar(255)
  type_delivery_bank_slip String?   @db.VarChar(255)
  cpf_cnpj                String?   @db.VarChar(255)
  created_at              DateTime  @db.Timestamptz(6)
  date_entry              DateTime? @db.Timestamptz(6)
  updated_at              DateTime  @db.Timestamptz(6)
  deleted_at              DateTime? @db.Timestamptz(6)
  rg                      String?   @db.VarChar(255)
  zipcode                 String?   @db.VarChar(255)
  number                  String?   @db.VarChar(255)
  complement              String?   @db.VarChar(255)
  district                String?   @db.VarChar(255)
  city                    String?   @db.VarChar(255)
  state                   String?   @db.VarChar(255)
  alternative_zipcode     String?   @db.VarChar(255)
  alternative_adress      String?   @db.VarChar(255)
  alternative_number      String?   @db.VarChar(255)
  alternative_complement  String?   @db.VarChar(255)
  alternative_district    String?   @db.VarChar(255)
  alternative_city        String?   @db.VarChar(255)
  alternative_state       String?   @db.VarChar(255)
  users                   users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model user_group {
  id         Int       @id @default(autoincrement())
  id_user    Int
  id_group   Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  groups     groups    @relation(fields: [id_group], references: [id], onDelete: Cascade)
  users      users     @relation(fields: [id_user], references: [id], onDelete: Cascade)
}

model user_type {
  type  String  @id @db.VarChar(255)
  users users[]
}

model users {
  id                                  Int                         @id @default(autoincrement())
  email                               String?                     @db.VarChar(255)
  password_hash                       String?                     @db.VarChar(255)
  email_verified_at                   DateTime?                   @db.Timestamptz(6)
  created_at                          DateTime                    @db.Timestamptz(6)
  updated_at                          DateTime                    @db.Timestamptz(6)
  deleted_at                          DateTime?                   @db.Timestamptz(6)
  type                                String?                     @db.VarChar(255)
  profile_id                          Int?
  account_id                          String?                     @unique @db.VarChar(255)
  profiles_profilesTousers_profile_id profiles?                   @relation("profilesTousers_profile_id", fields: [profile_id], references: [id])
  user_type                           user_type?                  @relation(fields: [type], references: [type])
  accounts_payable                    accounts_payable[]
  announcement_comments               announcement_comments[]
  announcement_interactions           announcement_interactions[]
  announcements                       announcements[]
  benefits_club_cards                 benefits_club_cards[]
  calendar_guests                     calendar_guests[]
  calendars                           calendars[]
  directory_documents_share           directory_documents_share[]
  documents_measurement               documents_measurement[]
  owners_tenants                      owners_tenants[]
  package_problem_solutions           package_problem_solutions[]
  patrimony_item                      patrimony_item[]
  payment_slips                       payment_slips[]
  penalty                             penalty[]
  profiles_profiles_user_idTousers    profiles[]                  @relation("profiles_user_idTousers")
  provider_commentaries               provider_commentaries[]
  provider_ratings                    provider_ratings[]
  shares                              shares[]
  unit_comments                       unit_comments[]
  user_access_company                 user_access_company[]
  user_access_history                 user_access_history[]
  user_contact                        user_contact[]
  user_group                          user_group[]
  widgets_dashboard                   widgets_dashboard[]
}

model virtual_area_business_hours {
  id              Int            @id @default(autoincrement())
  start_period    String         @db.VarChar(255)
  end_period      String         @db.VarChar(255)
  day             String?        @db.VarChar(255)
  active          Boolean?
  virtual_area_id Int?
  created_at      DateTime?      @db.Timestamptz(6)
  updated_at      DateTime?      @db.Timestamptz(6)
  deleted_at      DateTime?      @db.Timestamptz(6)
  virtual_areas   virtual_areas? @relation(fields: [virtual_area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model virtual_area_documents {
  id              Int           @id @default(autoincrement())
  type            String        @db.VarChar(255)
  file_id         Int
  virtual_area_id Int
  created_at      DateTime      @db.Timestamptz(6)
  updated_at      DateTime      @db.Timestamptz(6)
  deleted_at      DateTime?     @db.Timestamptz(6)
  files           files         @relation(fields: [file_id], references: [id], onDelete: Cascade)
  virtual_areas   virtual_areas @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
}

model virtual_area_interdiction_documents {
  id                           Int                        @id @default(autoincrement())
  type                         String?                    @db.VarChar(255)
  virtual_area_interdiction_id Int
  file_id                      Int
  created_at                   DateTime                   @db.Timestamptz(6)
  updated_at                   DateTime                   @db.Timestamptz(6)
  deleted_at                   DateTime?                  @db.Timestamptz(6)
  files                        files                      @relation(fields: [file_id], references: [id], onDelete: Cascade)
  virtual_area_interdictions   virtual_area_interdictions @relation(fields: [virtual_area_interdiction_id], references: [id], onDelete: Cascade, map: "virtual_area_interdiction_doc_virtual_area_interdiction_id_fkey")
}

model virtual_area_interdiction_schedules {
  id                           Int                         @id @default(autoincrement())
  date                         DateTime                    @db.Timestamptz(6)
  virtual_area_interdiction_id Int?
  created_at                   DateTime                    @db.Timestamptz(6)
  updated_at                   DateTime                    @db.Timestamptz(6)
  deleted_at                   DateTime?                   @db.Timestamptz(6)
  virtual_area_interdictions   virtual_area_interdictions? @relation(fields: [virtual_area_interdiction_id], references: [id], onDelete: Cascade, map: "virtual_area_interdiction_sch_virtual_area_interdiction_id_fkey")
}

model virtual_area_interdictions {
  id                                  Int                                   @id @default(autoincrement())
  start_period                        DateTime?                             @db.Timestamptz(6)
  end_period                          DateTime?                             @db.Timestamptz(6)
  description                         String?
  active                              Boolean                               @default(true)
  parent_id                           Int?
  virtual_area_id                     Int?
  created_at                          DateTime                              @db.Timestamptz(6)
  updated_at                          DateTime                              @db.Timestamptz(6)
  deleted_at                          DateTime?                             @db.Timestamptz(6)
  close_indefinitely                  Boolean?
  interdiction_tag                    String?                               @db.VarChar(255)
  interdiction_tags                   interdiction_tags?                    @relation(fields: [interdiction_tag], references: [tag], onDelete: NoAction, onUpdate: NoAction)
  virtual_area_interdictions          virtual_area_interdictions?           @relation("virtual_area_interdictionsTovirtual_area_interdictions", fields: [parent_id], references: [id], onDelete: Cascade)
  virtual_areas                       virtual_areas?                        @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
  virtual_area_interdiction_documents virtual_area_interdiction_documents[]
  virtual_area_interdiction_schedules virtual_area_interdiction_schedules[]
  other_virtual_area_interdictions    virtual_area_interdictions[]          @relation("virtual_area_interdictionsTovirtual_area_interdictions")
}

model virtual_area_module_configs {
  id             Int          @id @default(autoincrement())
  condominium_id Int
  module_id      Int
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  modules        modules      @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model virtual_area_reserve_config_defaults {
  id                 Int            @id @default(autoincrement())
  type               String         @db.VarChar(255)
  start_period       Int?
  end_period         Int?
  hour_avaible_hours String[]       @db.VarChar(255)
  period             String?        @db.VarChar(255)
  hour_disponibility Int?
  virtual_area_id    Int?
  created_at         DateTime?      @db.Timestamptz(6)
  updated_at         DateTime?      @db.Timestamptz(6)
  deleted_at         DateTime?      @db.Timestamptz(6)
  virtual_areas      virtual_areas? @relation(fields: [virtual_area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model virtual_area_reserve_configs {
  id                 Int                                                   @id @default(autoincrement())
  day                enum_virtual_area_reserve_configs_day?
  type               enum_virtual_area_reserve_configs_type
  hour_avaible_hours String[]                                              @db.VarChar(255)
  virtual_area_id    Int?
  created_at         DateTime                                              @db.Timestamptz(6)
  updated_at         DateTime                                              @db.Timestamptz(6)
  deleted_at         DateTime?                                             @db.Timestamptz(6)
  period             period_enum?
  start_period       Int?
  end_period         Int?
  hour_disponibility enum_virtual_area_reserve_configs_hour_disponibility?
  active             Boolean?
  virtual_areas      virtual_areas?                                        @relation(fields: [virtual_area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model virtual_area_restrictions {
  id                               Int            @id @default(autoincrement())
  reserve_limit_value              Int?
  reserve_limit_period             String?        @db.VarChar(255)
  waiting_list                     Boolean        @default(false)
  inadimplency_condominium_reserve Boolean        @default(true)
  virtual_area_id                  Int?           @unique
  created_at                       DateTime       @db.Timestamptz(6)
  updated_at                       DateTime       @db.Timestamptz(6)
  deleted_at                       DateTime?      @db.Timestamptz(6)
  guests_per_reserve               Int?
  simultaneous_reserve_limit       Int?
  virtual_areas                    virtual_areas? @relation(fields: [virtual_area_id], references: [id], onDelete: Cascade)
}

model virtual_areas {
  id                                   Int                                       @id @default(autoincrement())
  name                                 String                                    @db.VarChar(255)
  type                                 enum_virtual_areas_type
  description                          String?
  max_capacity                         Int?
  use_rate                             Float?
  minimum_booking_advance              Int?
  maximum_booking_advance              Int?
  reserve_cancellation_advance         Int?
  automatic_reserve_approval           Boolean?
  configuration_day                    enum_virtual_areas_configuration_day?
  configuration_period                 enum_virtual_areas_configuration_period[]
  use_rules                            String?
  deactivated                          Boolean                                   @default(false)
  condominium_id                       Int?
  company_id                           Int?
  created_at                           DateTime                                  @db.Timestamptz(6)
  updated_at                           DateTime                                  @db.Timestamptz(6)
  deleted_at                           DateTime?                                 @db.Timestamptz(6)
  reservable                           Boolean                                   @default(true)
  reserve_payment                      Boolean?
  package_pickup                       Boolean                                   @default(false)
  plan_account_category_id             Int?
  cost_center_id                       Int?
  days_to_expire                       Int?
  payment_method                       String?                                   @db.VarChar(255)
  days_to_due_date                     Int?
  collection_complement                String?                                   @db.VarChar(255)
  reserve_usage_payment                Boolean?                                  @default(false)
  companies                            companies?                                @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                         condominiums?                             @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  cost_centers                         cost_centers?                             @relation(fields: [cost_center_id], references: [id])
  residents_payment_methods            residents_payment_methods?                @relation(fields: [payment_method], references: [payment_method], onDelete: NoAction, onUpdate: NoAction)
  plan_account_categories              plan_account_categories?                  @relation(fields: [plan_account_category_id], references: [id])
  inventory                            inventory[]
  packages                             packages[]
  packages_schedule_settings           packages_schedule_settings[]
  reserve_actions_log                  reserve_actions_log[]
  reserve_queues                       reserve_queues[]
  virtual_area_business_hours          virtual_area_business_hours[]
  virtual_area_documents               virtual_area_documents[]
  virtual_area_interdictions           virtual_area_interdictions[]
  virtual_area_reserve_config_defaults virtual_area_reserve_config_defaults[]
  virtual_area_reserve_configs         virtual_area_reserve_configs[]
  virtual_area_restrictions            virtual_area_restrictions?
}

model widgets_dashboard {
  id             Int           @id @default(autoincrement())
  options        Json?         @db.Json
  position_x     Int
  position_y     Int
  height         Int
  width          Int
  widget_type_id Int
  user_id        Int
  company_id     Int?
  condominium_id Int?
  created_at     DateTime?     @db.Timestamptz(6)
  updated_at     DateTime?     @db.Timestamptz(6)
  deleted_at     DateTime?     @db.Timestamptz(6)
  companies      companies?    @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users          users         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  widgets_types  widgets_types @relation(fields: [widget_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model widgets_types {
  id                        Int                         @id @default(autoincrement())
  type                      String                      @db.VarChar(255)
  created_at                DateTime?                   @db.Timestamptz(6)
  updated_at                DateTime?                   @db.Timestamptz(6)
  deleted_at                DateTime?                   @db.Timestamptz(6)
  is_to_company             Boolean
  is_to_condominium         Boolean
  available_widgets_options available_widgets_options[]
  available_widgets_sizes   available_widgets_sizes[]
  widgets_dashboard         widgets_dashboard[]
}

model working_hours {
  id                Int         @id @default(autoincrement())
  first_day_of_week Int
  last_day_of_week  Int
  first_hour_of_day String      @db.VarChar(255)
  last_hour_of_day  String      @db.VarChar(255)
  created_at        DateTime    @db.Timestamptz(6)
  updated_at        DateTime    @db.Timestamptz(6)
  deleted_at        DateTime?   @db.Timestamptz(6)
  employees         employees[]
}

model access_center_settings {
  id             Int          @id @default(autoincrement())
  condominium_id Int          @unique
  regulation     String?
  created_at     DateTime     @db.Timestamptz(6)
  updated_at     DateTime     @db.Timestamptz(6)
  deleted_at     DateTime?    @db.Timestamptz(6)
  condominiums   condominiums @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model access_center_guests {
  id             Int                           @id @default(autoincrement())
  condominium_id Int
  document       String                        @db.VarChar(255)
  name           String                        @db.VarChar(255)
  phone          String?                       @db.VarChar(255)
  avatar_id      Int?
  created_at     DateTime                      @db.Timestamptz(6)
  updated_at     DateTime                      @db.Timestamptz(6)
  deleted_at     DateTime?                     @db.Timestamptz(6)
  avatar         files?                        @relation(fields: [avatar_id], references: [id])
  condominiums   condominiums                  @relation(fields: [condominium_id], references: [id], onDelete: SetNull)
  accesses       access_center[]
  attachments    access_center_documents[]
  vehicles       access_center_guest_vehicle[]

  @@unique([condominium_id, document], map: "unique_condominium_guest")
}

model reserves_guests {
  id         Int       @id @default(autoincrement())
  reserve_id Int
  created_at DateTime  @db.Timestamptz(6)
  updated_at DateTime  @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  name       String    @db.VarChar(255)
  document   String?   @db.VarChar(14)
  reserves   reserves  @relation(fields: [reserve_id], references: [id], onDelete: Cascade)
}

model access_center_guest_vehicle {
  id            Int                  @id @default(autoincrement())
  model         String?              @db.VarChar(255)
  color         String?              @db.VarChar(255)
  guest_id      Int
  created_at    DateTime             @default(now()) @db.Timestamptz(6)
  updated_at    DateTime             @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?            @db.Timestamptz(6)
  license_plate String?              @db.VarChar(10)
  guest         access_center_guests @relation(fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model access_center_documents {
  id                   Int                  @id @default(autoincrement())
  guest_id             Int
  file_id              Int
  created_at           DateTime?            @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?            @db.Timestamptz(6)
  files                files                @relation(fields: [file_id], references: [id], onDelete: Cascade)
  access_center_guests access_center_guests @relation(fields: [guest_id], references: [id], onDelete: Cascade)
}

model access_center {
  id              Int                       @id @default(autoincrement())
  guest_id        Int
  unit_id         Int
  status          enum_access_center_status
  start_date      DateTime                  @db.Timestamptz(6)
  end_date        DateTime?                 @db.Timestamptz(6)
  accessed_at     DateTime?                 @db.Timestamptz(6)
  created_by      Int?
  updated_by      Int?
  created_at      DateTime                  @db.Timestamptz(6)
  updated_at      DateTime                  @db.Timestamptz(6)
  deleted_at      DateTime?                 @db.Timestamptz(6)
  visit_reason    String?                   @db.VarChar(255)
  reserve_id      Int?
  access_card     String?                   @db.VarChar(50)
  parking_id      Int?
  created_profile profiles?                 @relation("access_center_created_byToprofiles", fields: [created_by], references: [id])
  guest           access_center_guests      @relation(fields: [guest_id], references: [id], onDelete: Cascade)
  parkings        parkings?                 @relation(fields: [parking_id], references: [id], onDelete: Cascade)
  reserves        reserves?                 @relation(fields: [reserve_id], references: [id], onDelete: Cascade)
  units           units                     @relation(fields: [unit_id], references: [id], onDelete: Cascade)
  updated_profile profiles?                 @relation("access_center_updated_byToprofiles", fields: [updated_by], references: [id])
}

model survey_attachments {
  id          Int               @id @default(autoincrement())
  file_id     Int
  survey_id   Int?
  question_id Int?
  files       files             @relation(fields: [file_id], references: [id], onDelete: Cascade)
  questions   survey_questions? @relation(fields: [question_id], references: [id], onDelete: Cascade)
  surveys     surveys?          @relation(fields: [survey_id], references: [id], onDelete: Cascade)
}

model survey_question_options {
  id              Int              @id @default(autoincrement())
  question_id     Int
  title           String           @db.VarChar(255)
  is_customizable Boolean          @default(false)
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime         @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?        @db.Timestamptz(6)
  questions       survey_questions @relation(fields: [question_id], references: [id], onDelete: Cascade)
  survey_answers  survey_answers[]
}

model survey_questions {
  id            Int                       @id @default(autoincrement())
  survey_id     Int
  title         String                    @db.VarChar(255)
  type          String                    @db.VarChar(255)
  is_required   Boolean                   @default(false)
  max_options   Int?
  order         Int
  created_at    DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at    DateTime                  @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?                 @db.Timestamptz(6)
  surveys       surveys                   @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  question_type question_type             @relation(fields: [type], references: [type], onDelete: Cascade)
  answers       survey_answers[]
  attachments   survey_attachments[]
  options       survey_question_options[]
}

model question_type {
  id               Int                @id @default(autoincrement())
  type             String             @unique @db.VarChar(255)
  survey_questions survey_questions[]
}

model surveys {
  id                 Int                             @id @default(autoincrement())
  condominium_id     Int
  title              String                          @db.VarChar(255)
  description        String
  start_date         DateTime                        @db.Timestamptz(6)
  end_date           DateTime                        @db.Timestamptz(6)
  visible_profiles   enum_surveys_visible_profiles[]
  vote_weight        enum_surveys_vote_weight
  secret_vote        Boolean                         @default(false)
  allow_see_result   Boolean                         @default(false)
  allow_inadimplency Boolean                         @default(false)
  cover_id           Int?
  closed_at          DateTime?                       @db.Timestamptz(6)
  closed_reason      String?                         @db.VarChar(255)
  created_by         Int
  updated_by         Int?
  created_at         DateTime                        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime                        @default(now()) @db.Timestamptz(6)
  deleted_at         DateTime?                       @db.Timestamptz(6)
  condominiums       condominiums                    @relation(fields: [condominium_id], references: [id], onDelete: SetNull)
  cover              files?                          @relation(fields: [cover_id], references: [id])
  created_profile    profiles                        @relation("profilesTosurveys_created_by", fields: [created_by], references: [id], onDelete: SetNull)
  updated_profile    profiles?                       @relation("profilesTosurveys_updated_by", fields: [updated_by], references: [id])
  attachments        survey_attachments[]
  comments           survey_comments[]
  questions          survey_questions[]
  submissions        survey_submissions[]
}

model survey_answers {
  id              Int                      @id @default(autoincrement())
  submission_id   Int
  question_id     Int
  option_id       Int?
  answer          String                   @db.VarChar(255)
  created_at      DateTime                 @default(now()) @db.Timestamptz(6)
  updated_at      DateTime                 @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?                @db.Timestamptz(6)
  justification   String?
  question_option survey_question_options? @relation(fields: [option_id], references: [id])
  question        survey_questions         @relation(fields: [question_id], references: [id], onDelete: Cascade)
  submission      survey_submissions       @relation(fields: [submission_id], references: [id], onDelete: Cascade)
}

model survey_submissions {
  id            Int              @id @default(autoincrement())
  survey_id     Int
  profile_id    Int
  unit_fraction Float?
  created_at    DateTime         @default(now()) @db.Timestamptz(6)
  updated_at    DateTime         @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?        @db.Timestamptz(6)
  profiles      profiles         @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  surveys       surveys          @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  answers       survey_answers[]
}

model benefits_club_cards {
  id         Int       @id @default(autoincrement())
  code       Int
  user_id    Int
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model employee_accesses {
  id                          Int                           @id @default(autoincrement())
  condominium_id              Int?
  company_id                  Int?
  employee_id                 Int
  created_at                  DateTime                      @db.Timestamptz(6)
  updated_at                  DateTime                      @db.Timestamptz(6)
  deleted_at                  DateTime?                     @db.Timestamptz(6)
  active                      Boolean?                      @default(false)
  is_main                     Boolean                       @default(false)
  companies                   companies?                    @relation(fields: [company_id], references: [id], onDelete: Cascade)
  condominiums                condominiums?                 @relation(fields: [condominium_id], references: [id], onDelete: Cascade)
  employees                   employees                     @relation(fields: [employee_id], references: [id], onDelete: Cascade)
  employee_module_permissions employee_module_permissions[]
}

model employee_attachments {
  id                        Int                       @id @default(autoincrement())
  file_id                   Int
  employee_id               Int
  category_id               Int
  name                      String                    @db.VarChar(255)
  created_at                DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at                DateTime                  @default(now()) @db.Timestamptz(6)
  deleted_at                DateTime?                 @db.Timestamptz(6)
  employee_attachment_types employee_attachment_types @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employees                 employees                 @relation(fields: [employee_id], references: [id], onDelete: Cascade)
  files                     files                     @relation(fields: [file_id], references: [id], onDelete: Cascade)
}

model report_categories {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  is_favorite   Boolean
  companyId     Int?
  condominiumId Int?
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  deleted_at    DateTime?     @db.Timestamptz(6)
  companies     companies?    @relation(fields: [companyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums  condominiums? @relation(fields: [condominiumId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model survey_comments {
  id                    Int               @id @default(autoincrement())
  survey_id             Int
  profile_id            Int
  parent_id             Int?
  content               String
  created_at            DateTime          @default(now()) @db.Timestamptz(6)
  updated_at            DateTime          @default(now()) @db.Timestamptz(6)
  deleted_at            DateTime?         @db.Timestamptz(6)
  survey_comments       survey_comments?  @relation("survey_commentsTosurvey_comments_parent_id", fields: [parent_id], references: [id], onDelete: Cascade)
  profiles              profiles          @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  surveys               surveys           @relation(fields: [survey_id], references: [id], onDelete: Cascade)
  other_survey_comments survey_comments[] @relation("survey_commentsTosurvey_comments_parent_id")
}

model data_report_items {
  id                 Int                         @id @default(autoincrement())
  type               enum_data_report_items_type
  query_ref          String?                     @db.VarChar(255)
  query_selections   String[]                    @db.VarChar(255)
  attachment_file_id Int?
  attachment_url     String?                     @db.VarChar(255)
  description        String?
  signature_number   Int?
  deleted_at         DateTime?                   @db.Timestamptz(6)
  created_at         DateTime?                   @db.Timestamptz(6)
  updated_at         DateTime?                   @db.Timestamptz(6)
  report_item_id     Int?
  report_items       report_items?               @relation(fields: [report_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report_associations {
  id             Int           @id @default(autoincrement())
  company_id     Int?
  condominium_id Int?
  report_id      Int
  created_at     DateTime?     @db.Timestamptz(6)
  delete_at      DateTime?     @db.Timestamptz(6)
  companies      companies?    @relation(fields: [company_id], references: [id], onDelete: NoAction)
  condominiums   condominiums? @relation(fields: [condominium_id], references: [id], onDelete: NoAction)
  reports        reports       @relation(fields: [report_id], references: [id], onDelete: NoAction)
}

model report_items {
  id                      Int                 @id @default(autoincrement())
  title                   String              @db.VarChar(255)
  position                Int
  period_number_of_months Int?
  period_type             String?             @db.VarChar(14)
  deleted_at              DateTime?           @db.Timestamptz(6)
  created_at              DateTime?           @db.Timestamptz(6)
  updated_at              DateTime?           @db.Timestamptz(6)
  report_id               Int?
  reports                 reports?            @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  data_report_items       data_report_items[]
}

model warning_center {
  id                        Int                         @id @default(autoincrement())
  created_at                DateTime                    @db.Timestamptz(6)
  deleted_at                DateTime?                   @db.Timestamptz(6)
  title                     String                      @db.VarChar(255)
  message                   String
  type                      String                      @db.VarChar(255)
  description               String
  condominium_id            Int
  file_id                   Int?
  profile_id                Int
  condominiums              condominiums                @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  files                     files?                      @relation(fields: [file_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles                  profiles                    @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warning_center_recipients warning_center_recipients[]
}

model warning_center_recipients {
  id                Int            @id @default(autoincrement())
  warning_center_id Int
  recipients_data   Json           @db.Json
  warning_center    warning_center @relation(fields: [warning_center_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reserve_actions_log {
  id                 Int           @id @default(autoincrement())
  profile_id         Int
  reserve_id         Int
  unit_id            Int
  condominium_id     Int
  company_id         Int
  area_id            Int
  action             String        @db.VarChar(255)
  action_description String        @db.VarChar(255)
  old_value          Json?         @db.Json
  created_at         DateTime      @db.Timestamptz(6)
  virtual_areas      virtual_areas @relation(fields: [area_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  companies          companies     @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  condominiums       condominiums  @relation(fields: [condominium_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profiles           profiles      @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reserves           reserves      @relation(fields: [reserve_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  units              units         @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum enum_access_center_status {
  CONFIRMED
  ALLOWED
  CANCELED
  EXPIRED
}

enum enum_announcement_documents_type {
  cover
  document
}

enum enum_announcement_interactions_type {
  like
  dislike
  love
  clap
  view
}

enum enum_bankaccount_pix_key_type {
  cpf_cnpj
  email
  number
  random_key
}

enum enum_billing_ways_name {
  E_Mail               @map("E-Mail")
  SMS
  WhatsApp
  Telegram
  Ligacao
  Extra_Judicial_Carta
  Judicial_Carta
}

enum enum_bills_collection_how_collect {
  divided_value
  specified_value
  fraction
}

enum enum_bills_collection_interval {
  single
  recurrent
  between
}

enum enum_bills_desconto_tipo {
  // % @map("%")
  R_ @map("R$")
}

enum enum_bills_payment_method {
  dinheiro
  cheque
  transferencia
  pix
}

enum enum_directory_documents_history_type {
  Directory
  Documents
}

enum enum_directory_documents_type {
  Directory
  Documents
}

enum enum_documents_release_type {
  nota_fiscal
  boletos_comprovantes @map("boletos/comprovantes")
  outros
}

enum enum_employee_benefit_name {
  Aux_lio_transporte @map("0 - Auxílio transporte")
  Vale_alimenta__o   @map("1 - Vale alimentação")
  Vale_refei__o      @map("2 - Vale refeição")
  Aux_lio_educa__o   @map("3 - Auxílio educação")
}

enum enum_group_time_restrictions_day {
  Domingo
  Segunda_feira @map("Segunda-feira")
  Ter_a_feira   @map("Terça-feira")
  Quarta_feira  @map("Quarta-feira")
  Quinta_feira  @map("Quinta-feira")
  Sexta_feira   @map("Sexta-feira")
  S_bado        @map("Sábado")
}

enum enum_monetary_index_monetary {
  zero @map("0...")
  one  @map("1...")
  two  @map("2...")
}

enum enum_monetary_rates_rate_type {
  R_ @map("R$")
  // % @map("%")
}

enum enum_notifications_configuration_mean_of_communication {
  EMAIL
  WHATSAPP
  TELEGRAM
  SMS
}

enum enum_notifications_configuration_period {
  ON_DUE_DATE
  AFTER_DUE_DATE
  BEFORE_DUE_DATE
  ON_BILL_GENERATION
}

enum enum_notifications_range {
  Antes_do_vencimento  @map("0 - Antes do vencimento")
  No_vencimento        @map("1 - No vencimento")
  Depois_do_vencimento @map("2 - Depois do vencimento")
}

enum enum_notifications_types {
  Email                   @map("0 - Email")
  SMS                     @map("1 - SMS")
  Whatsapp                @map("2 - Whatsapp")
  Telegram                @map("3 - Telegram")
  Liga__o                 @map("4 - Ligação")
  Extrajudicial_por_carta @map("5 - Extrajudicial por carta")
  Judicial_por_carta      @map("6 - Judicial por carta")
}

enum enum_package_parcels_size {
  small
  medium
  large
}

enum enum_package_problem_solutions_status {
  pending
  declined
  accepted
}

enum enum_packages_problem_type {
  misplacement
  loss
  damaged
  violated
  other
  pending
}

enum enum_packages_schedule_settings_day {
  Domingo
  Segunda_feira @map("Segunda-feira")
  Ter_a_feira   @map("Terça-feira")
  Quarta_feira  @map("Quarta-feira")
  Quinta_feira  @map("Quinta-feira")
  Sexta_feira   @map("Sexta-feira")
  S_bado        @map("Sábado")
}

enum enum_packages_settings_delivery_mode {
  manual
  qrcode
}

enum enum_packages_tracks_status {
  transit
  delivered
  pending
}

enum enum_packages_withdrawals_withdrawal_document_type {
  cpf
  rg
}

enum enum_parkings_type {
  AUTONOMOUS
  LINKED
  COLLECTIVE
  ROTARY
}

enum enum_payment_methods_pix_key_type {
  cpf_cnpj
  email
  number
  random_key
}

enum enum_provider_ratings_author_type {
  administradora
  morador
  s_ndico        @map("síndico")
}

enum enum_providers_payment_methods_payment_method {
  Cheque
  Transfer_ncia @map("Transferência")
  Dinheiro
  Pix
}

enum enum_releases_type {
  a_pagar
  a_receber
  padr_o        @map("padrão")
  transfer_ncia @map("transferência")
}

enum enum_remittance_configs_discount_type {
  // % @map("%")
  R_ @map("R$")
}

enum enum_remittance_configs_protest_day_type {
  corridos
  teis     @map("úteis")
}

enum enum_report_selection_relations_reference_period {
  anterior
  posterior
}

enum enum_report_selections_reference_period {
  anterior
  posterior
}

enum enum_reports_show_in {
  condominium
  company
  both
}

enum enum_shared_recipients_channel {
  link
  company
  condominium
  unit
  group
  user
}

enum enum_shared_recipients_channel_identifier_type {
  id
  email
}

enum enum_shared_recipients_permission {
  view
  admin
}

enum enum_units_property {
  UNIT_WITH_PARKING_SPACE
  UNIT_WITHOUT_PARKING_SPACE
}

enum enum_virtual_area_reserve_configs_day {
  SUNDAY    @map("Domingo")
  MONDAY    @map("Segunda-feira")
  TUESDAY   @map("Terça-feira")
  WEDNESDAY @map("Quarta-feira")
  THURSDAY  @map("Quinta-feira")
  FRIDAY    @map("Sexta-feira")
  SATURDAY  @map("Sábado")
}

enum enum_virtual_area_reserve_configs_hour_disponibility {
  hour        @map("1")
  halfhour    @map("30")
  quarterhour @map("15")
}

enum enum_virtual_area_reserve_configs_type {
  Hor_rio @map("Horário")
  Per_odo @map("Período")
  Dia
}

enum enum_virtual_areas_allowed_days {
  Domingo
  Segunda
  Ter_a   @map("Terça")
  Quarta
  Quinta
  Sexta
  S_bado  @map("Sábado")
}

enum enum_virtual_areas_configuration_day {
  Domingo
  Segunda
  Ter_a   @map("Terça")
  Quarta
  Quinta
  Sexta
  S_bado  @map("Sábado")
}

enum enum_virtual_areas_configuration_period {
  Manh_    @map("Manhã")
  Tarde
  Noite
  Integral
}

enum enum_virtual_areas_reserve_payment {
  Extraordin_rio @map("Extraordinário")
  Pr_xima_fatura @map("Próxima fatura")
}

enum enum_virtual_areas_type {
  rea_Gourmet     @map("Área Gourmet")
  rea_para_Festas @map("Área para Festas")
  Entretenimento
  reas_comuns     @map("Áreas comuns")
  reas_privativas @map("Áreas privativas")
  Escrit_rio      @map("Escritório")
  Churrasqueira
  Garagem
  Hall
  Parquinho
  Piscina
  Portaria
  Sal_o_de_festas @map("Salão de festas")
}

enum period_enum {
  Manh_ @map("Manhã")
  Tarde
  Noite
}

enum enum_surveys_visible_profiles {
  RESIDENTS
  EMPLOYEES
  PROVIDERS
}

enum enum_surveys_vote_weight {
  UNIT
  FRACTION
}

enum enum_access_center_visit_reason {
  COMMON_VISIT
  RESERVATION
  SERVICE_PROVISION
  DELIVERY
}

enum enum_data_report_items_type {
  attachment
  query
  description
  signature
}
